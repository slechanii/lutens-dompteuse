[{"/home/slechani/dompteuse-react/src/index.tsx":"1","/home/slechani/dompteuse-react/src/i18n.ts":"2","/home/slechani/dompteuse-react/src/reportWebVitals.ts":"3","/home/slechani/dompteuse-react/src/PrivateRoute.tsx":"4","/home/slechani/dompteuse-react/src/views/login/Login.tsx":"5","/home/slechani/dompteuse-react/src/views/priseconscience/PriseConscience.tsx":"6","/home/slechani/dompteuse-react/src/views/delivrance/Delivrance.tsx":"7","/home/slechani/dompteuse-react/src/views/liberte/Liberte.tsx":"8","/home/slechani/dompteuse-react/src/views/fiole/Fiole.tsx":"9","/home/slechani/dompteuse-react/src/store/index.ts":"10","/home/slechani/dompteuse-react/src/store/root/actions.ts":"11","/home/slechani/dompteuse-react/src/views/main/Main.tsx":"12","/home/slechani/dompteuse-react/src/utils/logincode.tsx":"13","/home/slechani/dompteuse-react/src/components/logoserge/LogoSerge.tsx":"14","/home/slechani/dompteuse-react/src/components/videomodal/VideoModal.tsx":"15","/home/slechani/dompteuse-react/src/components/digitinput/DigitInput.tsx":"16","/home/slechani/dompteuse-react/src/components/arrow/Arrow.tsx":"17","/home/slechani/dompteuse-react/src/components/thumbnail/Thumbnail.tsx":"18","/home/slechani/dompteuse-react/src/components/homepageButton/HomepageButton.tsx":"19","/home/slechani/dompteuse-react/src/components/modalcarousel/ModalCarousel.tsx":"20","/home/slechani/dompteuse-react/src/components/modalchecklist/ModalChecklist.tsx":"21","/home/slechani/dompteuse-react/src/components/barnavigationmobile/BarNavigationMobile.tsx":"22","/home/slechani/dompteuse-react/src/components/header/Header.tsx":"23","/home/slechani/dompteuse-react/src/components/barnavigation/BarNavigation.tsx":"24","/home/slechani/dompteuse-react/src/store/localStorage.ts":"25","/home/slechani/dompteuse-react/src/store/root/reducers.ts":"26","/home/slechani/dompteuse-react/src/store/root/types.ts":"27","/home/slechani/dompteuse-react/src/graphql/mutations.ts":"28","/home/slechani/dompteuse-react/src/components/buttonunlocktwo/ButtonUnlockTwo.tsx":"29","/home/slechani/dompteuse-react/src/components/buttonunlockthree/ButtonUnlockThree.tsx":"30","/home/slechani/dompteuse-react/src/components/modalparfum/ModalParfum.tsx":"31","/home/slechani/dompteuse-react/src/components/languageselector/LanguageSelector.tsx":"32","/home/slechani/dompteuse-react/src/components/playButton/PlayButton.tsx":"33","/home/slechani/dompteuse-react/src/components/mute/Mute.tsx":"34","/home/slechani/dompteuse-react/src/components/buttonunlockone/ButtonUnlockOne.tsx":"35"},{"size":2455,"mtime":1617027226517,"results":"36","hashOfConfig":"37"},{"size":866,"mtime":1617027226517,"results":"38","hashOfConfig":"37"},{"size":427,"mtime":1617027226518,"results":"39","hashOfConfig":"37"},{"size":860,"mtime":1617027227005,"results":"40","hashOfConfig":"37"},{"size":7649,"mtime":1617027226764,"results":"41","hashOfConfig":"37"},{"size":3955,"mtime":1617027226792,"results":"42","hashOfConfig":"37"},{"size":3989,"mtime":1617027226520,"results":"43","hashOfConfig":"37"},{"size":4549,"mtime":1617027226646,"results":"44","hashOfConfig":"37"},{"size":7901,"mtime":1617027861720,"results":"45","hashOfConfig":"37"},{"size":466,"mtime":1617027226518,"results":"46","hashOfConfig":"37"},{"size":1543,"mtime":1617027226519,"results":"47","hashOfConfig":"37"},{"size":4642,"mtime":1617027888674,"results":"48","hashOfConfig":"37"},{"size":6555,"mtime":1617027226520,"results":"49","hashOfConfig":"37"},{"size":592,"mtime":1617027226500,"results":"50","hashOfConfig":"37"},{"size":4155,"mtime":1617027226502,"results":"51","hashOfConfig":"37"},{"size":834,"mtime":1617027226496,"results":"52","hashOfConfig":"37"},{"size":923,"mtime":1617027226463,"results":"53","hashOfConfig":"37"},{"size":247,"mtime":1617027226515,"results":"54","hashOfConfig":"37"},{"size":662,"mtime":1617027226516,"results":"55","hashOfConfig":"37"},{"size":8896,"mtime":1617027226501,"results":"56","hashOfConfig":"37"},{"size":8781,"mtime":1617027226501,"results":"57","hashOfConfig":"37"},{"size":8125,"mtime":1617027226503,"results":"58","hashOfConfig":"37"},{"size":790,"mtime":1617027226496,"results":"59","hashOfConfig":"37"},{"size":29199,"mtime":1617027226485,"results":"60","hashOfConfig":"37"},{"size":663,"mtime":1617027226518,"results":"61","hashOfConfig":"37"},{"size":1190,"mtime":1617027226519,"results":"62","hashOfConfig":"37"},{"size":849,"mtime":1617027226519,"results":"63","hashOfConfig":"37"},{"size":1219,"mtime":1617027226516,"results":"64","hashOfConfig":"37"},{"size":1743,"mtime":1617027226493,"results":"65","hashOfConfig":"37"},{"size":1751,"mtime":1617027226490,"results":"66","hashOfConfig":"37"},{"size":1970,"mtime":1617027226502,"results":"67","hashOfConfig":"37"},{"size":2402,"mtime":1617027226499,"results":"68","hashOfConfig":"37"},{"size":703,"mtime":1617027226515,"results":"69","hashOfConfig":"37"},{"size":1388,"mtime":1617027226514,"results":"70","hashOfConfig":"37"},{"size":1743,"mtime":1617027226487,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1lpzuvn",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"74"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"74"},"/home/slechani/dompteuse-react/src/index.tsx",[],["159","160"],"/home/slechani/dompteuse-react/src/i18n.ts",[],"/home/slechani/dompteuse-react/src/reportWebVitals.ts",[],"/home/slechani/dompteuse-react/src/PrivateRoute.tsx",[],"/home/slechani/dompteuse-react/src/views/login/Login.tsx",["161","162","163"],"import React from 'react';\nimport {withTranslation, WithTranslation} from 'react-i18next';\nimport {RouteComponentProps, withRouter} from 'react-router';\nimport DigitInput from '../../components/digitinput/DigitInput';\nimport LogoSerge from 'src/components/logoserge/LogoSerge';\nimport {ReduxAppState} from '../../store';\nimport {Dispatch} from 'redux';\nimport {connect} from 'react-redux';\nimport {isAuthentifcated} from 'src/store/root/actions';\nimport {RootActionTypes} from 'src/store/root/types';\n\nimport './Login.css';\nimport lockImg from './LOCK.png';\nimport lockImg2x from './LOCK@2x.png';\nimport unlockImg from './UNLOCK THE SECRET.png';\nimport unlockImg2x from './UNLOCK THE SECRET@2x.png';\nimport Main from '../main/Main';\n\n// const validcode = {\n//   '29547': 'EN',\n//   '27683': 'FR',\n//   '37294': 'EN',\n//   '36842': 'EN',\n//   '46273': 'ES',\n//   '43582': 'EN',\n//   '59376': 'EN',\n//   '52843': 'EN',\n//   '64823': 'EN',\n//   '63598': 'FR',\n//   '78569': 'EN',\n//   '72495': 'EN',\n//   '83296': 'EN',\n//   '86572': 'EN',\n//   '95426': 'EN',\n//   '92857': 'EN',\n//   '97364': 'EN',\n//   '25894': 'FR',\n// };\nimport validcode from 'src/utils/logincode';\n\ntype StateProps = {\n  hasValidateAuthentification: boolean;\n};\n\ntype DispatchProps = {\n  isAuthentifcated: (code: string) => RootActionTypes;\n};\n\ntype Prop = WithTranslation & RouteComponentProps & StateProps & DispatchProps;\ntype State = {\n  value: string;\n  loaded: boolean;\n  code_entered: boolean;\n  pre_load_over: boolean;\n  is_auth: boolean;\n};\n\nclass Login extends React.Component<Prop, State> {\n  constructor(prop: Prop) {\n    super(prop);\n    this.state = {\n      value: '',\n      loaded: false,\n      code_entered: false,\n      pre_load_over: false,\n      is_auth: false,\n    };\n    // if (this.props.hasValidateAuthentification) {\n    //   //   this.props.history.push({pathname: 'main'});\n    //   alert('IS AUTH');\n    // } else alert('not auth');\n    this.handleLoad = this.handleLoad.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.handleLoad);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', this.handleLoad);\n  }\n\n  handleLoad = () => {\n    this.setState({loaded: true});\n  };\n\n  _onChange = (value: string) => {\n    this.setState({value});\n    if (Object.keys(validcode).includes(value)) {\n      this.setState({value});\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.props.i18n.changeLanguage(validcode[value].lang.toLowerCase());\n      this.props.isAuthentifcated(value);\n      this.setState({code_entered: true});\n      localStorage.setItem('is_auth', JSON.stringify(true));\n      this.setState({is_auth: true});\n    }\n  };\n\n  loadPage = () => {\n    // this.props.history.push({pathname: 'main'});\n    this.setState({pre_load_over: true});\n  };\n\n  // Clears text selection\n  //   clearSelection = () => {\n  //     if (!window) {\n  //     } else {\n  //       if (window.getSelection) {\n  //         window.getSelection().removeAllRanges();\n  //       }\n  //     }\n  //   };\n\n  render(): JSX.Element {\n    // Page load check for login\n    if (document.readyState === 'complete' && this.state.loaded != true) {\n      console.log('LOAD CHECK ENTERED');\n      this.setState({loaded: true});\n    }\n\n    const zoom_anim = this.state.code_entered ? ' zoom-anim' : '';\n    const fade_out = this.state.code_entered ? ' fade-out' : '';\n    const loaded_fade_in = this.state.loaded ? ' fade-in-rest' : 'no-opacity';\n    const fade_in_lock = this.state.loaded ? ' fade-in-lock ' : ' ';\n    const no_opacity = this.state.code_entered ? ' ' : ' no-opacity ';\n    const logo_fade = this.state.loaded && !this.state.code_entered ? ' fade-in-logo' : '';\n    const is_auth = localStorage.getItem('is_auth') === null ? false : true;\n\n    if (this.state.code_entered) setTimeout(this.loadPage, 4800);\n    const {t} = this.props;\n    const {value} = this.state;\n\n    // Login page\n    const login_page = (\n      <div className=\"login\">\n        <LogoSerge className={`logo no-opacity ${logo_fade}  ${fade_out}  `} />\n        <div className=\"center\">\n          <div className={`lock ${zoom_anim}`} id=\"lock-container\">\n            <img\n              id=\"lock\"\n              className={`lock  ${fade_in_lock}  ${no_opacity}  `}\n              //   className={this.state.loaded ? 'lock fade-in-lock' : 'lock no-opacity'}\n              src={lockImg}\n              srcSet={lockImg2x}\n            />\n          </div>\n          <div className={`lock no-select unlockgroup ${fade_out} ${loaded_fade_in}  `}>\n            <img className=\"unlock\" src={unlockImg} srcSet={unlockImg2x} />\n          </div>\n          <div className={`form enter-code no-select ${fade_out} ${loaded_fade_in}  `}>\n            {/* 29547 */}\n            {/* {t('login.enter')} */}\n            <p className=\"enter no-select\">{t('login.enter')}</p>\n            <DigitInput code_entered={this.state.code_entered} value={value} onChange={this._onChange} />\n          </div>\n\n          {/* {t('login.hashtag')} */}\n          <p className={`hashtag ${fade_out} ${loaded_fade_in}  `}>{t('login.hashtag')}</p>\n        </div>\n      </div>\n    );\n\n    // alert(JSON.stringify(ReactReduxContext));\n    // const page_to_show = this.getPage();\n    // if (JSON.parse(localStorage.getItem('is_auth')) === true) page_to_show = <p></p>;\n    // If user already entered a valid code => Show main else show login page\n    // const page_;\n    // If code entered is valid => show main else show login page\n    // const page_to_show = this.state.pre_load_over === true ? <Main></Main> : login_page;\n\n    if (is_auth && this.state.code_entered === false) {\n      return <Main fade_anim={false}></Main>;\n    } else if (is_auth === true && this.state.code_entered === true && this.state.pre_load_over === true) {\n      //   alert('launching with auth and code');\n      return <Main fade_anim={true}></Main>;\n    } else {\n      return login_page;\n    }\n    // <div className=\"login\">\n    //   <LogoSerge className={`logo no-opacity ${logo_fade}  ${fade_out}  `} />\n    //   <div className=\"center\">\n    //     <div className={`lock ${zoom_anim}`} id=\"lock-container\">\n    //       <img\n    //         id=\"lock\"\n    //         className={`lock  ${fade_in_lock}  ${no_opacity}  `}\n    //         //   className={this.state.loaded ? 'lock fade-in-lock' : 'lock no-opacity'}\n    //         src={lockImg}\n    //         srcSet={lockImg2x}\n    //       />\n    //     </div>\n    //     <div className={`lock no-select unlockgroup ${fade_out} ${loaded_fade_in}  `}>\n    //       <img className=\"unlock\" src={unlockImg} srcSet={unlockImg2x} />\n    //     </div>\n    //     <div className={`form enter-code no-select ${fade_out} ${loaded_fade_in}  `}>\n    //       {/* 29547 */}\n    //       {/* {t('login.enter')} */}\n    //       <p className=\"enter no-select\">ENTER THE CODE</p>\n    //       <DigitInput code_entered={this.state.code_entered} value={value} onChange={this._onChange} />\n    //     </div>\n    //     {/* {t('login.hashtag')} */}\n    //     <p className={`hashtag ${fade_out} ${loaded_fade_in}  `}>#LADOMPTEUSEENCAGEE</p>\n    //   </div>\n    // </div>\n  }\n}\n\nconst mapStateToProps = (state: ReduxAppState): StateProps => {\n  return {\n    hasValidateAuthentification: state.hasValidateAuthentification,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    isAuthentifcated: (code: string) => dispatch(isAuthentifcated(code)),\n  };\n};\n\nexport default connect<StateProps, DispatchProps, unknown, ReduxAppState>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withTranslation()(withRouter(Login)));\n","/home/slechani/dompteuse-react/src/views/priseconscience/PriseConscience.tsx",[],"/home/slechani/dompteuse-react/src/views/delivrance/Delivrance.tsx",[],"/home/slechani/dompteuse-react/src/views/liberte/Liberte.tsx",[],"/home/slechani/dompteuse-react/src/views/fiole/Fiole.tsx",["164","165"],"/home/slechani/dompteuse-react/src/store/index.ts",[],"/home/slechani/dompteuse-react/src/store/root/actions.ts",[],"/home/slechani/dompteuse-react/src/views/main/Main.tsx",["166","167","168"],"/home/slechani/dompteuse-react/src/utils/logincode.tsx",[],"/home/slechani/dompteuse-react/src/components/logoserge/LogoSerge.tsx",["169"],"import React from 'react';\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\n\nimport sergeLogo from './Logo_Header_Serge_Lutens.png';\nimport sergeLogo2x from './Logo_Header_Serge_Lutens@2x.png';\nimport './LogoSerge.css';\n\ntype Props = {\n  className?: string;\n} & RouteComponentProps;\n\nfunction LogoSerge(props: Props): JSX.Element {\n  return (\n    <img\n      className={`logo-serge ${props.className ?? ''}`}\n      src={sergeLogo}\n      srcSet={sergeLogo2x}\n      /*onClick={() => props.history.push({pathname: 'main'})}*/\n    />\n  );\n}\n\nexport default withRouter(LogoSerge);\n","/home/slechani/dompteuse-react/src/components/videomodal/VideoModal.tsx",[],"/home/slechani/dompteuse-react/src/components/digitinput/DigitInput.tsx",[],"/home/slechani/dompteuse-react/src/components/arrow/Arrow.tsx",["170"],"import React, {useState} from 'react';\nimport arrowLogo from './Arrow_Back.png';\nimport arrowTopLogo from './arrow_up_default.png';\nimport arrowTopLogoHover from './arrow_up_hover.png';\nimport arrowLogoHover from './Arrow_Back_hover.png';\nimport './Arrow.css';\n\ntype Props = {\n  className?: string;\n  direction: 'left' | 'right' | 'top';\n  onClick?: () => void;\n};\n\nfunction Arrow(props: Props): JSX.Element {\n  const {direction} = props;\n  const [hover, setHover] = useState(false);\n  let src;\n  if (hover) {\n    src = direction === 'top' ? arrowTopLogoHover : arrowLogoHover;\n  } else {\n    src = direction === 'top' ? arrowTopLogo : arrowLogo;\n  }\n  return (\n    <img\n      className={`clickable arrow-back arrow-${direction} ${props.className ?? ''}`}\n      src={src}\n      onClick={props.onClick}\n      onMouseOver={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    />\n  );\n}\n\nexport default Arrow;\n","/home/slechani/dompteuse-react/src/components/thumbnail/Thumbnail.tsx",["171"],"import React from 'react';\nimport './Thumbnail.css';\n\ntype Props = {\n  className?: string;\n  image: string;\n};\n\nfunction Thumbnail(props: Props): JSX.Element {\n  return <img className=\"thumbnail\" src={props.image} />;\n}\n\nexport default Thumbnail;\n","/home/slechani/dompteuse-react/src/components/homepageButton/HomepageButton.tsx",[],"/home/slechani/dompteuse-react/src/components/modalcarousel/ModalCarousel.tsx",["172","173"],"import React, {createRef} from 'react';\nimport Modal from 'react-modal';\nimport Carousel from 'react-bootstrap/Carousel';\nimport videojs, {VideoJsPlayer} from 'video.js';\nimport {isMobile} from 'mobile-device-detect';\n\nimport closeBtn from '../../assets/img/button_close.png';\nimport closeBtn2x from '../../assets/img/button_close@2x.png';\nimport 'simplebar/dist/simplebar.min.css';\nimport './ModalCarousel.css';\nimport Mute from '../mute/Mute';\nimport PlayButton from '../playButton/PlayButton';\nimport {RootActionTypes} from 'src/store/root/types';\nimport {ReduxAppState} from 'src/store';\nimport {Dispatch} from 'redux';\nimport {muteVideo, unmuteVideo} from 'src/store/root/actions';\nimport {connect} from 'react-redux';\n\nconst options = {\n  html5: true,\n  fluid: true,\n  loop: false,\n  controls: false,\n  fill: true,\n  preload: 'auto',\n};\n\nModal.setAppElement('#root');\n\nconst styles: Modal.Styles = {\n  overlay: {\n    zIndex: 10,\n    background: 'rgba(0,0,0,0.9)',\n  },\n  content: {\n    border: 'none',\n    padding: 0,\n    backgroundColor: 'black',\n    top: 30,\n    bottom: 30,\n    left: 20,\n    right: 20,\n  },\n};\n\ntype StateProps = {\n  videoMuted: boolean;\n};\ntype DispatchProps = {\n  muteVideo: () => RootActionTypes;\n  unmuteVideo: () => RootActionTypes;\n};\n\ntype OwnProps = {\n  isOpen: boolean;\n  video1: string;\n  video1Webm: string;\n  video2: string;\n  video2Webm: string;\n  video2HideMute?: boolean;\n  citation: string;\n  citationSmall: string;\n  image: string;\n  imageMobileBackground: string;\n  imageTitle: string;\n  description: string[] | string;\n  onClose?: () => void;\n};\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\ntype State = {\n  slideIndex: number;\n  previousSlideIndex?: number;\n  video1Ended: boolean;\n  video2Ended: boolean;\n};\n\nclass ModalCarousel extends React.Component<Props, State> {\n  private video1Ref = createRef<HTMLVideoElement>();\n  private video2Ref = createRef<HTMLVideoElement>();\n  private videoJs1: VideoJsPlayer | null = null;\n  private videoJs2: VideoJsPlayer | null = null;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      slideIndex: 0,\n      video1Ended: false,\n      video2Ended: false,\n    };\n  }\n  componentDidUpdate(prevProps: Props): void {\n    console.log('componentDidUpdate');\n    if (this.state.previousSlideIndex !== this.state.slideIndex) {\n      if (this.state.slideIndex === 0 && prevProps.isOpen === true) {\n        this._setupVideoJs1();\n      }\n      if (this.state.slideIndex === 3 && prevProps.isOpen === true) {\n        this._setupVideoJs2();\n      }\n      this.setState({previousSlideIndex: this.state.slideIndex});\n    }\n  }\n\n  _setupVideoJs1 = (): void => {\n    console.log('_setupVideoJs');\n    console.log({video1Ref: this.video1Ref.current, videoJs1: this.videoJs1});\n    if (this.videoJs1 === null && this.video1Ref.current !== undefined) {\n      this.videoJs1 = videojs(this.video1Ref.current, options);\n      this.videoJs1.on('ended', () => {\n        this.setState({video1Ended: true});\n      });\n      this.videoJs1.on('play', () => {\n        this.setState({video1Ended: false});\n      });\n      this.videoJs1.loop(false);\n      this.videoJs1.muted(this.props.videoMuted);\n      this.videoJs1.autoplay(true);\n    } else if (this.videoJs1) {\n      this.videoJs1.muted(this.props.videoMuted);\n      this.videoJs1.play();\n    }\n    if (isMobile && this.videoJs1 !== null) {\n      this.videoJs1.muted(this.props.videoMuted);\n      this.videoJs1.play();\n    }\n  };\n  _setupVideoJs2 = (): void => {\n    console.log('_setupVideoJs');\n    console.log({video2Ref: this.video2Ref.current, videoJs2: this.videoJs2});\n    if (this.videoJs2 === null && this.video2Ref.current !== undefined) {\n      this.videoJs2 = videojs(this.video2Ref.current, options);\n      this.videoJs2.on('ended', () => {\n        this.setState({video2Ended: true});\n      });\n      this.videoJs2.on('play', () => {\n        this.setState({video2Ended: false});\n      });\n      this.videoJs2.loop(false);\n      this.videoJs2.muted(this.props.videoMuted);\n      this.videoJs2.autoplay(true);\n    } else if (this.videoJs2) {\n      this.videoJs2.muted(this.props.videoMuted);\n      this.videoJs2.play();\n    }\n    if (isMobile && this.videoJs2 !== null) {\n      this.videoJs2.muted(this.props.videoMuted);\n      this.videoJs2.play();\n    }\n  };\n\n  _dispose = (): void => {\n    console.log('_dispose');\n    if (this.videoJs1 !== null) {\n      this.videoJs1.dispose();\n      this.videoJs1 = null;\n    }\n    if (this.videoJs2 !== null) {\n      this.videoJs2.dispose();\n      this.videoJs2 = null;\n    }\n  };\n  _onAfterOpen = (): void => {\n    this._setupVideoJs1();\n  };\n\n  _onAfterClose = (): void => {\n    this._dispose();\n    this.setState({slideIndex: 0});\n  };\n\n  _toggleMute = (): void => {\n    this.props.videoMuted ? this.props.unmuteVideo() : this.props.muteVideo();\n    this.videoJs1?.muted(!this.props.videoMuted);\n    this.videoJs2?.muted(!this.props.videoMuted);\n  };\n\n  render(): JSX.Element {\n    const {slideIndex} = this.state;\n    const {\n      isOpen,\n      onClose,\n      video1,\n      video1Webm,\n      video2,\n      video2Webm,\n      citation,\n      citationSmall,\n      image,\n      imageTitle,\n      description,\n      imageMobileBackground,\n      videoMuted,\n    } = this.props;\n    let backgroundImage = '';\n    if (slideIndex === 2 && isMobile) {\n      backgroundImage = `url(${imageMobileBackground})`;\n    } else if (slideIndex === 2) {\n      backgroundImage = `var(--background-image-slide3)`;\n    }\n    return (\n      <Modal isOpen={isOpen} style={styles} onAfterOpen={this._onAfterOpen} onAfterClose={this._onAfterClose}>\n        <div\n          className=\"modal-carousel\"\n          style={{\n            ['--background-image' as never]: backgroundImage,\n          }}>\n          <Carousel interval={null} activeIndex={slideIndex} onSelect={(slideIndex) => this.setState({slideIndex})}>\n            <Carousel.Item>\n              <video\n                ref={this.video1Ref}\n                className=\"video-js custom-videojs\"\n                playsInline\n                webkit-playsinline=\"true\"\n                controls={false}>\n                <source src={video1} type=\"video/mp4\" />\n                <source src={video1Webm} type=\"video/webm\" />\n              </video>\n              <Mute isMuted={videoMuted} onClick={this._toggleMute} />\n              <PlayButton\n                show={this.state.video1Ended}\n                onClick={() => {\n                  this.videoJs1?.play();\n                }}\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <div className=\"section-2\">\n                <div className=\"section-2-content\">\n                  <h2 className=\"citation\">{citation}</h2>\n                  <h2 className=\"serge\">Serge Lutens</h2>\n                  <hr />\n                  <small>{citationSmall}</small>\n                </div>\n              </div>\n            </Carousel.Item>\n            <Carousel.Item>\n              <div className=\"section-3\">\n                <div className=\"section-3-content\">\n                  <img src={image} />\n                  <div>\n                    <h3>{imageTitle}</h3>\n                    <div className=\"description\">\n                      {Array.isArray(description) ? (\n                        description.map((d, index) => <p key={index}>{d}</p>)\n                      ) : (\n                        <p>{description}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Carousel.Item>\n            <Carousel.Item>\n              <video\n                ref={this.video2Ref}\n                className={'video-js custom-videojs'}\n                playsInline\n                webkit-playsinline=\"true\"\n                controls={false}>\n                <source src={video2} type=\"video/mp4\" />\n                <source src={video2Webm} type=\"video/webm\" />\n              </video>\n              {this.props.video2HideMute ? <></> : <Mute isMuted={videoMuted} onClick={this._toggleMute} />}\n              <PlayButton\n                show={this.state.video2Ended}\n                onClick={() => {\n                  this.videoJs2?.play();\n                }}\n              />\n            </Carousel.Item>\n          </Carousel>\n          <div className=\"close-btn\">\n            <img src={closeBtn} srcSet={closeBtn2x} onClick={onClose} />\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state: ReduxAppState): StateProps => {\n  return {\n    videoMuted: state.videoMuted,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    muteVideo: () => dispatch(muteVideo()),\n    unmuteVideo: () => dispatch(unmuteVideo()),\n  };\n};\n\nexport default connect<StateProps, DispatchProps, unknown, ReduxAppState>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ModalCarousel);\n","/home/slechani/dompteuse-react/src/components/modalchecklist/ModalChecklist.tsx",["174"],"import React, {useState} from 'react';\nimport Modal from 'react-modal';\n\nimport './ModalChecklist.css';\n\nimport backgroundTile from '../../assets/img/background-tile.png';\nimport closeBtn from '../../assets/img/button_close.png';\nimport closeBtn2x from '../../assets/img/button_close@2x.png';\nimport {WithTranslation, withTranslation} from 'react-i18next';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport {RootActionTypes} from '../../store/root/types';\nimport {ReduxAppState} from '../../store';\nimport {createVote, Vote} from '../../store/root/actions';\nimport {connect} from 'react-redux';\nimport {ThunkDispatch} from 'redux-thunk';\nimport {Action} from 'redux';\n\nModal.setAppElement('#root');\n\nconst styles: Modal.Styles = {\n  overlay: {\n    zIndex: 10,\n    background: 'none',\n    backgroundRepeat: 'repeat',\n    backgroundImage: 'url(' + backgroundTile + ')',\n  },\n  content: {\n    border: 'none',\n    padding: 50,\n    backgroundColor: 'black',\n    top: 30,\n    bottom: 30,\n    left: 20,\n    right: 20,\n  },\n};\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose?: () => void;\n};\n\ntype StateProps = {\n  hasVoted: boolean;\n  code: string;\n};\ntype DispatchProps = {\n  createVote: (vote: Vote) => Promise<RootActionTypes>;\n};\n\ntype Props = OwnProps & StateProps & DispatchProps & WithTranslation;\n\nfunction ModalChecklist(props: Props): JSX.Element {\n  const [question1, setQuestion1] = useState<boolean | undefined>(undefined);\n  const [question2, setQuestion2] = useState('');\n  const [question3, setQuestion3] = useState('');\n  const [question4, setQuestion4] = useState<boolean | undefined>(undefined);\n  const [question5, setQuestion5] = useState<boolean | undefined>(undefined);\n  const [question6, setQuestion6] = useState('');\n  const [question7, setQuestion7] = useState('');\n  const {t, isOpen, onClose, createVote, hasVoted, code} = props;\n\n  return (\n    <Modal isOpen={isOpen} style={styles} bodyOpenClassName=\"ReactModal__Body--open checklist-modal\">\n      <div className=\"modal-checklist\">\n        <div className=\"close-btn\">\n          <img src={closeBtn} srcSet={closeBtn2x} onClick={onClose} />\n        </div>\n        {hasVoted ? (\n          <div>{t('main.checklist.dejarepondu')}</div>\n        ) : (\n          <div>\n            <h2>{t('main.checklist.title')}</h2>\n            <Form>\n              <Form.Group as={Row}>\n                <Form.Label column sm={9}>\n                  {t('main.checklist.question1')}\n                </Form.Label>\n                <Col sm={3} className=\"offset-1\">\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    name=\"question1\"\n                    value=\"true\"\n                    label={t('main.checklist.oui')}\n                    checked={question1}\n                    onChange={() => setQuestion1(true)}\n                  />\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    name=\"question1\"\n                    value=\"false\"\n                    label={t('main.checklist.non')}\n                    checked={question1 === false}\n                    onChange={() => setQuestion1(false)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Row>\n                <Col sm={12}>\n                  <Form.Label>{t('main.checklist.question2')}</Form.Label>\n                  <Form.Control\n                    className=\"notes\"\n                    as=\"textarea\"\n                    name=\"question2\"\n                    aria-rowcount={2}\n                    maxLength={250}\n                    value={question2}\n                    onChange={(event) => setQuestion2(event.target.value)}\n                  />\n                </Col>\n              </Form.Row>\n              <Form.Row>\n                <Col sm={12}>\n                  <Form.Label>{t('main.checklist.question3')}</Form.Label>\n                  <Form.Control\n                    className=\"notes\"\n                    as=\"textarea\"\n                    name=\"question3\"\n                    aria-rowcount={2}\n                    maxLength={250}\n                    value={question3}\n                    onChange={(event) => setQuestion3(event.target.value)}\n                  />\n                </Col>\n              </Form.Row>\n              <Form.Group as={Row}>\n                <Form.Label column sm={9}>\n                  {t('main.checklist.question4')}\n                </Form.Label>\n                <Col sm={3} className=\"offset-1\">\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    name=\"question4\"\n                    value=\"true\"\n                    label={t('main.checklist.oui')}\n                    checked={question4}\n                    onChange={() => setQuestion4(true)}\n                  />\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    name=\"question4\"\n                    value=\"false\"\n                    label={t('main.checklist.non')}\n                    checked={question4 === false}\n                    onChange={() => setQuestion4(false)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Form.Label column sm={9}>\n                  {t('main.checklist.question5')}\n                </Form.Label>\n                <Col sm={3} className=\"offset-1\">\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    name=\"question5\"\n                    value=\"true\"\n                    label={t('main.checklist.oui')}\n                    checked={question5}\n                    onChange={() => setQuestion5(true)}\n                  />\n                  <Form.Check\n                    inline\n                    type=\"radio\"\n                    name=\"question5\"\n                    value=\"false\"\n                    label={t('main.checklist.non')}\n                    checked={question5 === false}\n                    onChange={() => setQuestion5(false)}\n                  />\n                </Col>\n              </Form.Group>\n              <Form.Row>\n                <Col sm={12}>\n                  <Form.Label>{t('main.checklist.question6')}</Form.Label>\n                  <Form.Control\n                    className=\"notes\"\n                    as=\"textarea\"\n                    name=\"question6\"\n                    aria-rowcount={2}\n                    maxLength={250}\n                    value={question6}\n                    onChange={(event) => setQuestion6(event.target.value)}\n                  />\n                </Col>\n              </Form.Row>\n              <Form.Row>\n                <Col sm={12}>\n                  <Form.Label>{t('main.checklist.question7')}</Form.Label>\n                  <Form.Control\n                    className=\"notes\"\n                    as=\"textarea\"\n                    name=\"question7\"\n                    aria-rowcount={2}\n                    maxLength={250}\n                    value={question7}\n                    onChange={(event) => setQuestion7(event.target.value)}\n                  />\n                </Col>\n              </Form.Row>\n              <Form.Row>\n                <Col sm={12}>\n                  <Form.Label style={{opacity: 0.4}}>{t('main.checklist.gdpr')}</Form.Label>\n                </Col>\n              </Form.Row>\n              <Form.Row className=\"form-footer\">\n                <Button\n                  variant=\"outline-light\"\n                  disabled={question1 === undefined || question4 === undefined || question5 === undefined}\n                  onClick={() => {\n                    if (question1 !== undefined && question4 !== undefined && question5 !== undefined) {\n                      createVote({question1, question2, question3, question4, question5, question6, question7, code});\n                    }\n                  }}>\n                  {t('main.checklist.envoyer')}\n                </Button>\n              </Form.Row>\n            </Form>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = (state: ReduxAppState): StateProps => {\n  return {\n    hasVoted: state.hasVoted,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    code: state.code!,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<ReduxAppState, undefined, Action>): DispatchProps => {\n  return {\n    createVote: (vote: Vote) => dispatch(createVote(vote)),\n  };\n};\n\nexport default connect<StateProps, DispatchProps, unknown, ReduxAppState>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withTranslation()(ModalChecklist));\n","/home/slechani/dompteuse-react/src/components/barnavigationmobile/BarNavigationMobile.tsx",["175","176","177","178","179","180","181","182","183"],"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, {useState} from 'react';\nimport {WithTranslation, withTranslation} from 'react-i18next';\nimport ModalParfum from '../modalparfum/ModalParfum';\nimport {Button} from 'react-bootstrap';\n\nimport './BarNavigationMobile.css';\n\nimport arrowDown from '../../assets/img/Arrow_down.png';\nimport arrowDown2x from '../../assets/img/Arrow_down@2x.png';\n\nimport fioleFilsJoie from '../../assets/img/Fiole_Fils_De_Joie.png';\nimport fioleFilsJoie2x from '../../assets/img/Fiole_Fils_De_Joie@2x.png';\nimport imageFilsJoie from '../../assets/img/Fils_De_joie.jpg';\nimport imageFilsJoie2x from '../../assets/img/Fils_De_joie@2x.png';\n\nimport fioleFilleBerlin from '../../assets/img/Fiole_Fille_De_Berlin.png';\nimport fioleFilleBerlin2x from '../../assets/img/Fiole_Fille_De_Berlin@2x.png';\nimport imageFilleBerlin from '../../assets/img/La_Fille_De_Berlin.jpg';\nimport imageFilleBerlin2x from '../../assets/img/La_Fille_De_Berlin@2x.png';\n\nimport fioleAmbre from '../../assets/img/Fiole_Ambre_Sultan.png';\nimport fioleAmbre2x from '../../assets/img/Fiole_Ambre_Sultan@2x.png';\nimport imageAmbre from '../../assets/img/Ambre_Sultan.jpg';\nimport imageAmbre2x from '../../assets/img/Ambre_Sultan@2x.png';\n\nimport fioleFleurDoranger from '../../assets/img/Fiole_Fleur_Doranger.png';\nimport fioleFleurDoranger2x from '../../assets/img/Fiole_Fleur_Doranger@2x.png';\nimport imageFleurDoranger from '../../assets/img/Fleurs_d_Oranger.jpg';\nimport imageFleurDoranger2x from '../../assets/img/Fleurs_d_Oranger@2x.png';\n\nimport fioleBoisVanille from '../../assets/img/Fiole_Un_Bois_Vanille.png';\nimport fioleBoisVanille2x from '../../assets/img/Fiole_Un_Bois_Vanille@2x.png';\nimport imageBoisVanille from '../../assets/img/Un_Bois_Vanille.jpg';\nimport imageBoisVanille2x from '../../assets/img/Un_Bois_Vanille@2x.png';\n\nimport fioleNuitCellophane from '../../assets/img/Fiole_Nuit_De_Cellophane.png';\nimport fioleNuitCellophane2x from '../../assets/img/Fiole_Nuit_De_Cellophane@2x.png';\nimport imageNuitCellophane from '../../assets/img/Nuit_De_Cellophane.jpg';\nimport imageNuitCellophane2x from '../../assets/img/Nuit_De_Cellophane@2x.png';\n\nimport fioleFeminite from '../../assets/img/Fiole_Feminite_Du_Bois.png';\nimport fioleFeminite2x from '../../assets/img/Fiole_Feminite_Du_Bois@2x.png';\nimport imageFeminite from '../../assets/img/Feminite_Du_Bois.jpg';\nimport imageFeminite2x from '../../assets/img/Feminite_Du_Bois@2x.png';\n\nimport fioleLorpheline from '../../assets/img/Fiole_Lorpheline.png';\nimport fioleLorpheline2x from '../../assets/img/Fiole_Lorpheline@2x.png';\nimport imageLorpheline from '../../assets/img/L_orpheline.jpg';\nimport imageLorpheline2x from '../../assets/img/L_orpheline@2x.png';\n\ntype Props = {\n  onShare: any;\n} & WithTranslation;\n\nfunction BarNavigationMobile(props: Props): JSX.Element {\n  const {t} = props;\n  const [active, setActive] = useState('');\n  const [modalActive, setModalActive] = useState('');\n  return (\n    <div className=\"bar-navigation-container\">\n      <div className=\"bar-navigation\">\n        <div className={active === '1' ? 'active item' : 'item'} onClick={() => setActive('1')}>\n          <Button variant=\"outline- border-none\" onClick={() => setModalActive('1')}>\n            <img src={fioleFilsJoie} srcSet={fioleFilsJoie2x} />\n          </Button>\n          <ModalParfum\n            isOpen={modalActive === '1'}\n            image={imageFilsJoie}\n            image2x={imageFilsJoie2x}\n            title={t('fiole.filsdejoie.title')}\n            content={t('fiole.filsdejoie.content')}\n            onClose={() => setModalActive('')}\n          />\n        </div>\n        <div className={active === '2' ? 'active item' : 'item'} onClick={() => setActive('2')}>\n          <Button variant=\"outline- border-none\" onClick={() => setModalActive('2')}>\n            <img src={fioleFilleBerlin} srcSet={fioleFilleBerlin2x} />\n          </Button>\n          <ModalParfum\n            isOpen={modalActive === '2'}\n            image={imageFilleBerlin}\n            image2x={imageFilleBerlin2x}\n            title={t('fiole.filleberlin.title')}\n            content={t('fiole.filleberlin.content')}\n            onClose={() => setModalActive('')}\n          />\n        </div>\n        <div className={active === '3' ? 'active item' : 'item'} onClick={() => setActive('3')}>\n          <Button variant=\"outline- border-none\" onClick={() => setModalActive('3')}>\n            <img src={fioleAmbre} srcSet={fioleAmbre2x} />\n          </Button>\n          <ModalParfum\n            isOpen={modalActive === '3'}\n            image={imageAmbre}\n            image2x={imageAmbre2x}\n            title={t('fiole.ambre.title')}\n            content={t('fiole.ambre.content')}\n            onClose={() => setModalActive('')}\n          />\n        </div>\n        <div className={active === '4' ? 'active item' : 'item'} onClick={() => setActive('4')}>\n          <Button variant=\"outline- border-none\" onClick={() => setModalActive('4')}>\n            <img src={fioleFleurDoranger} srcSet={fioleFleurDoranger2x} />\n          </Button>\n          <ModalParfum\n            isOpen={modalActive === '4'}\n            image={imageFleurDoranger}\n            image2x={imageFleurDoranger2x}\n            title={t('fiole.fleursdoranger.title')}\n            content={t('fiole.fleursdoranger.content')}\n            onClose={() => setModalActive('')}\n          />\n        </div>\n        <div className={active === '5' ? 'active item' : 'item'} onClick={() => setActive('5')}>\n          <Button variant=\"outline- border-none\" onClick={() => setModalActive('5')}>\n            <img src={fioleBoisVanille} srcSet={fioleBoisVanille2x} />\n          </Button>\n          <ModalParfum\n            isOpen={modalActive === '5'}\n            image={imageBoisVanille}\n            image2x={imageBoisVanille2x}\n            title={t('fiole.boisvanille.title')}\n            content={t('fiole.boisvanille.content')}\n            onClose={() => setModalActive('')}\n          />\n        </div>\n        <div className={active === '6' ? 'active item' : 'item'} onClick={() => setActive('6')}>\n          <Button variant=\"outline- border-none\" onClick={() => setModalActive('6')}>\n            <img src={fioleNuitCellophane} srcSet={fioleNuitCellophane2x} />\n          </Button>\n          <ModalParfum\n            isOpen={modalActive === '6'}\n            image={imageNuitCellophane}\n            image2x={imageNuitCellophane2x}\n            title={t('fiole.nuitcellophane.title')}\n            content={t('fiole.nuitcellophane.content')}\n            onClose={() => setModalActive('')}\n          />\n        </div>\n        <div className={active === '7' ? 'active item' : 'item'} onClick={() => setActive('7')}>\n          <Button variant=\"outline- border-none\" onClick={() => setModalActive('7')}>\n            <img src={fioleFeminite} srcSet={fioleFeminite2x} />\n          </Button>\n          <ModalParfum\n            isOpen={modalActive === '7'}\n            image={imageFeminite}\n            image2x={imageFeminite2x}\n            title={t('fiole.feminitebois.title')}\n            content={t('fiole.feminitebois.content')}\n            onClose={() => setModalActive('')}\n          />\n        </div>\n        <div className={active === '8' ? 'active item' : 'item'} onClick={() => setActive('8')}>\n          <Button variant=\"outline- border-none\" onClick={() => setModalActive('8')}>\n            <img src={fioleLorpheline} srcSet={fioleLorpheline2x} />\n          </Button>\n          <ModalParfum\n            isOpen={modalActive === '8'}\n            image={imageLorpheline}\n            image2x={imageLorpheline2x}\n            title={t('fiole.lorpheline.title')}\n            content={t('fiole.lorpheline.content')}\n            onClose={() => setModalActive('')}\n          />\n        </div>\n      </div>\n      <div className=\"bar-navigation-action\">\n        <Button variant=\"outline-light\" onClick={props.onShare}>\n          {t('fiole.partager')}\n        </Button>\n        <img className=\"arrow-down\" src={arrowDown} srcSet={arrowDown2x} />\n      </div>\n    </div>\n  );\n}\n\nexport default withTranslation()(BarNavigationMobile);\n","/home/slechani/dompteuse-react/src/components/header/Header.tsx",["184"],"import React from 'react';\nimport LanguageSelector from '../languageselector/LanguageSelector';\nimport LogoSerge from '../logoserge/LogoSerge';\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\n\nimport './Header.css';\n\nimport logoHeader from './Logo_Header_Unlock.png';\nimport logoHeader2x from './Logo_Header_Unlock@2x.png';\n\nfunction Header(props: RouteComponentProps): JSX.Element {\n  return (\n    <div className=\"header\">\n      <div className=\"left\">\n        <LogoSerge />\n      </div>\n      <div className=\"logounlock\" onClick={() => props.history.push({pathname: 'main'})}>\n        <img src={logoHeader} srcSet={logoHeader2x} />\n      </div>\n      <div className=\"right\">\n        <LanguageSelector />\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Header);\n","/home/slechani/dompteuse-react/src/components/barnavigation/BarNavigation.tsx",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, {useState} from 'react';\nimport {WithTranslation, withTranslation} from 'react-i18next';\nimport Button from 'react-bootstrap/Button';\nimport ModalParfum from '../modalparfum/ModalParfum';\n\nimport './BarNavigation.css';\n\nimport arrowDown from '../../assets/img/Arrow_down.png';\nimport arrowDown2x from '../../assets/img/Arrow_down@2x.png';\n\nimport fioleVerreFumee from '../../assets/img/Fiole.png';\nimport fioleSilhouetteTransparente from '../../assets/img/Fiole_Silhouette_transparente.png';\n\nimport fioleFilsJoie from '../../assets/img/Fiole_Fils_De_Joie.png';\nimport fioleFilsJoie2x from '../../assets/img/Fiole_Fils_De_Joie@2x.png';\nimport imageFilsJoie from '../../assets/img/Fils_De_joie.jpg';\nimport imageFilsJoie2x from '../../assets/img/Fils_De_joie@2x.png';\nimport fumeeFilsJoie from '../../assets/img/Fumee_Fils_de_joie.png';\n\nimport fioleFilleBerlin from '../../assets/img/Fiole_Fille_De_Berlin.png';\nimport fioleFilleBerlin2x from '../../assets/img/Fiole_Fille_De_Berlin@2x.png';\nimport imageFilleBerlin from '../../assets/img/La_Fille_De_Berlin.jpg';\nimport imageFilleBerlin2x from '../../assets/img/La_Fille_De_Berlin@2x.png';\nimport fumeeBerlin from '../../assets/img/Fumee_La_fille_de_Berlin.png';\n\nimport fioleAmbre from '../../assets/img/Fiole_Ambre_Sultan.png';\nimport fioleAmbre2x from '../../assets/img/Fiole_Ambre_Sultan@2x.png';\nimport imageAmbre from '../../assets/img/Ambre_Sultan.jpg';\nimport imageAmbre2x from '../../assets/img/Ambre_Sultan@2x.png';\nimport fumeeAmbre from '../../assets/img/Fumee_Ambre_sultan.png';\n\nimport fioleFleurDoranger from '../../assets/img/Fiole_Fleur_Doranger.png';\nimport fioleFleurDoranger2x from '../../assets/img/Fiole_Fleur_Doranger@2x.png';\nimport imageFleurDoranger from '../../assets/img/Fleurs_d_Oranger.jpg';\nimport imageFleurDoranger2x from '../../assets/img/Fleurs_d_Oranger@2x.png';\nimport fumeeFleurOranger from '../../assets/img/Fumee_Fleurs_doranger.png';\n\nimport fioleBoisVanille from '../../assets/img/Fiole_Un_Bois_Vanille.png';\nimport fioleBoisVanille2x from '../../assets/img/Fiole_Un_Bois_Vanille@2x.png';\nimport imageBoisVanille from '../../assets/img/Un_Bois_Vanille.jpg';\nimport imageBoisVanille2x from '../../assets/img/Un_Bois_Vanille@2x.png';\nimport fumeeBoisVanille from '../../assets/img/Fumee_Un_bois_vanille.png';\n\nimport fioleNuitCellophane from '../../assets/img/Fiole_Nuit_De_Cellophane.png';\nimport fioleNuitCellophane2x from '../../assets/img/Fiole_Nuit_De_Cellophane@2x.png';\nimport imageNuitCellophane from '../../assets/img/Nuit_De_Cellophane.jpg';\nimport imageNuitCellophane2x from '../../assets/img/Nuit_De_Cellophane@2x.png';\nimport fumeeNuitCellophane from '../../assets/img/Fumee_Nuit_de_cellophane.png';\n\nimport fioleFeminite from '../../assets/img/Fiole_Feminite_Du_Bois.png';\nimport fioleFeminite2x from '../../assets/img/Fiole_Feminite_Du_Bois@2x.png';\nimport imageFeminite from '../../assets/img/Feminite_Du_Bois.jpg';\nimport imageFeminite2x from '../../assets/img/Feminite_Du_Bois@2x.png';\nimport fumeeFeminite from '../../assets/img/Fumee_Feminite_du_bois.png';\n\nimport fioleLorpheline from '../../assets/img/Fiole_Lorpheline.png';\nimport fioleLorpheline2x from '../../assets/img/Fiole_Lorpheline@2x.png';\nimport imageLorpheline from '../../assets/img/L_orpheline.jpg';\nimport imageLorpheline2x from '../../assets/img/L_orpheline@2x.png';\nimport fumeeLOrpheline from '../../assets/img/Fumee_Lorpheline.png';\n\ntype Props = {\n  onShare: any;\n} & WithTranslation;\n\nfunction BarNavigation(props: Props): JSX.Element {\n  const {t} = props;\n  const [active, setActive] = useState('');\n  const [modalActive, setModalActive] = useState('');\n\n  //   Vials anims\n  const [vial1Anim, setVial1Anim] = useState(false);\n  const [vial2Anim, setVial2Anim] = useState(false);\n  const [vial3Anim, setVial3Anim] = useState(false);\n  const [vial4Anim, setVial4Anim] = useState(false);\n  const [vial5Anim, setVial5Anim] = useState(false);\n  const [vial6Anim, setVial6Anim] = useState(false);\n  const [vial7Anim, setVial7Anim] = useState(false);\n  const [vial8Anim, setVial8Anim] = useState(false);\n\n  //   Vials full\n  const [vial1Full, setVial1Full] = useState(false);\n  const [vial2Full, setVial2Full] = useState(false);\n  const [vial3Full, setVial3Full] = useState(false);\n  const [vial4Full, setVial4Full] = useState(false);\n  const [vial5Full, setVial5Full] = useState(false);\n  const [vial6Full, setVial6Full] = useState(false);\n  const [vial7Full, setVial7Full] = useState(false);\n  const [vial8Full, setVial8Full] = useState(false);\n  const [vialsFull, setVialFull] = useState(false);\n\n  // Smoke opacity class\n  const smoke_1 = active === '1' ? ' smoke-in ' : ' ';\n  const smoke_2 = active === '2' ? ' smoke-in ' : ' ';\n  const smoke_3 = active === '3' ? ' smoke-in ' : ' ';\n  const smoke_4 = active === '4' ? ' smoke-in ' : ' ';\n  const smoke_5 = active === '5' ? ' smoke-in ' : ' ';\n  const smoke_6 = active === '6' ? ' smoke-in ' : ' ';\n  const smoke_7 = active === '7' ? ' smoke-in ' : ' ';\n  const smoke_8 = active === '8' ? ' smoke-in ' : ' ';\n\n  //   Vials empty rotate anim classes\n  const vial1_empty_anim = vial1Anim === false ? ' ' : ' vial-empty-anim ';\n  const vial2_empty_anim = vial2Anim === false ? ' ' : ' vial-empty-anim-counter-clockwise ';\n  const vial3_empty_anim = vial3Anim === false ? ' ' : ' vial-empty-anim ';\n  const vial4_empty_anim = vial4Anim === false ? ' ' : ' vial-empty-anim-counter-clockwise ';\n  const vial5_empty_anim = vial5Anim === false ? ' ' : ' vial-empty-anim ';\n  const vial6_empty_anim = vial6Anim === false ? ' ' : ' vial-empty-anim ';\n  const vial7_empty_anim = vial7Anim === false ? ' ' : ' vial-empty-anim-counter-clockwise ';\n  const vial8_empty_anim = vial8Anim === false ? ' ' : ' vial-empty-anim ';\n  const vials_full_anim = vialsFull === false ? ' ' : ' thinner-vials-container ';\n\n  const anim_time = 3000;\n  //   Individually fill 2sec after hover (anim end)\n  if (vial1Anim)\n    setTimeout(function () {\n      setVial1Full(true);\n    }, anim_time);\n\n  if (vial2Anim)\n    setTimeout(function () {\n      setVial2Full(true);\n    }, anim_time);\n\n  if (vial3Anim)\n    setTimeout(function () {\n      setVial3Full(true);\n    }, anim_time);\n\n  if (vial4Anim)\n    setTimeout(function () {\n      setVial4Full(true);\n    }, anim_time);\n\n  if (vial5Anim)\n    setTimeout(function () {\n      setVial5Full(true);\n    }, anim_time);\n\n  if (vial6Anim)\n    setTimeout(function () {\n      setVial6Full(true);\n    }, anim_time);\n\n  if (vial7Anim)\n    setTimeout(function () {\n      setVial7Full(true);\n    }, anim_time);\n\n  if (vial8Anim)\n    setTimeout(function () {\n      setVial8Full(true);\n    }, anim_time);\n\n  // If all animations have been triggered wait for time needed to complete then set them as completed\n  if (vial1Anim && vial2Anim && vial3Anim && vial4Anim && vial5Anim && vial6Anim && vial7Anim && vial8Anim) {\n    setTimeout(function () {\n      setVialFull(true);\n    }, anim_time * 1.5);\n  }\n\n  //   Classnames changes triggering going from empty to full vial\n  const inv_to_visible1 = vial1Full === false ? ' ' : ' fade-in ';\n  const visible_to_inv1 = vial1Full === false ? ' ' : ' fade-out ';\n\n  const inv_to_visible2 = vial2Full === false ? ' ' : ' fade-in ';\n  const visible_to_inv2 = vial2Full === false ? ' ' : ' fade-out ';\n\n  const inv_to_visible3 = vial3Full === false ? ' ' : ' fade-in ';\n  const visible_to_inv3 = vial3Full === false ? ' ' : ' fade-out ';\n\n  const inv_to_visible4 = vial4Full === false ? ' ' : ' fade-in ';\n  const visible_to_inv4 = vial4Full === false ? ' ' : ' fade-out ';\n\n  const inv_to_visible5 = vial5Full === false ? ' ' : ' fade-in ';\n  const visible_to_inv5 = vial5Full === false ? ' ' : ' fade-out ';\n\n  const inv_to_visible6 = vial6Full === false ? ' ' : ' fade-in ';\n  const visible_to_inv6 = vial6Full === false ? ' ' : ' fade-out ';\n\n  const inv_to_visible7 = vial7Full === false ? ' ' : ' fade-in ';\n  const visible_to_inv7 = vial7Full === false ? ' ' : ' fade-out ';\n\n  const inv_to_visible8 = vial8Full === false ? ' ' : ' fade-in ';\n  const visible_to_inv8 = vial8Full === false ? ' ' : ' fade-out ';\n\n  //   ClassNames going from visible to invisible (or reverse)\n  // const inv_to_visible = vialsFull === false ? ' ' : ' fade-in ';\n  // const visible_to_inv = vialsFull === false ? ' ' : ' fade-out ';\n\n  return (\n    <div className=\"bar-navigation-container\">\n      <ul className={`bar-navigation ${vials_full_anim}`}>\n        <li\n          className={active === '1' ? 'active' : ''}\n          onClick={() => {\n            if (vialsFull) setActive('1');\n          }}>\n          <div className=\"section-title\">\n            {/* FIOLE CHAANGEE */}\n            <img className={`smoke-opacity ${smoke_1}`} src={fumeeFilsJoie}></img>\n            <img className=\"clickable vial vial-silhouette\" src={fioleSilhouetteTransparente} />\n            <img\n              onMouseEnter={() => {\n                setVial1Anim(true);\n              }}\n              className={`clickable vial vial-empty-1 ${vial1_empty_anim} ${visible_to_inv1}`}\n              src={fioleVerreFumee}\n            />\n            <img\n              //   className=\"clickable vial vial-full\"\n              className={`clickable vial vial-full ${inv_to_visible1}`}\n              src={fioleFilsJoie}\n              srcSet={fioleFilsJoie2x}\n            />\n          </div>\n          <div className=\"section-content\">\n            <h2>{t('fiole.filsdejoie.title')}</h2>\n            <p>{t('fiole.filsdejoie.detail')}</p>\n            <p>Serge Lutens</p>\n            <ModalParfum\n              isOpen={modalActive === '1'}\n              image={imageFilsJoie}\n              image2x={imageFilsJoie2x}\n              title={t('fiole.filsdejoie.title')}\n              content={t('fiole.filsdejoie.content')}\n              onClose={() => setModalActive('')}\n            />\n            <Button variant=\"outline-light\" onClick={() => setModalActive('1')}>\n              {t('fiole.decouvrir')}\n            </Button>\n          </div>\n        </li>\n        <li\n          className={active === '2' ? 'active' : ''}\n          onClick={() => {\n            if (vialsFull) setActive('2');\n          }}>\n          <div className=\"section-title\">\n            {/* FIOLE CHAANGEE */}\n            <img className={`smoke-opacity ${smoke_2}`} src={fumeeBerlin}></img>\n            <img className=\"clickable vial vial-silhouette\" src={fioleSilhouetteTransparente} />\n            <img\n              className={`clickable vial vial-full ${inv_to_visible2}`}\n              //   className=\"clickable vial-full\"\n              src={fioleFilleBerlin}\n              srcSet={fioleFilleBerlin2x}\n            />\n            <img\n              //   className=\"clickable vial vial-empty\"\n              onMouseEnter={() => {\n                setVial2Anim(true);\n              }}\n              className={`clickable vial vial-empty-2 ${vial2_empty_anim} ${visible_to_inv2}`}\n              src={fioleVerreFumee}\n            />\n          </div>\n          <div className=\"section-content\">\n            <h2>{t('fiole.filleberlin.title')}</h2>\n            <p>{t('fiole.filleberlin.detail')}</p>\n            <p>Serge Lutens</p>\n            <ModalParfum\n              isOpen={modalActive === '2'}\n              image={imageFilleBerlin}\n              image2x={imageFilleBerlin2x}\n              title={t('fiole.filleberlin.title')}\n              content={t('fiole.filleberlin.content')}\n              onClose={() => setModalActive('')}\n            />\n            <Button variant=\"outline-light\" onClick={() => setModalActive('2')}>\n              {t('fiole.decouvrir')}\n            </Button>\n          </div>\n        </li>\n        <li\n          className={active === '3' ? 'active' : ''}\n          onClick={() => {\n            if (vialsFull) setActive('3');\n          }}>\n          <div className=\"section-title\">\n            {/* FIOLE CHAANGEE */}\n            <img className={`smoke-opacity ${smoke_3}`} src={fumeeAmbre}></img>\n            <img className=\"clickable vial vial-silhouette\" src={fioleSilhouetteTransparente} />\n\n            <img className={`clickable vial vial-full ${inv_to_visible3}`} src={fioleAmbre} srcSet={fioleAmbre2x} />\n            <img\n              onMouseEnter={() => {\n                setVial3Anim(true);\n              }}\n              className={`clickable vial vial-empty-3 ${vial3_empty_anim} ${visible_to_inv3}`}\n              src={fioleVerreFumee}\n            />\n          </div>\n          <div className=\"section-content\">\n            <h2>{t('fiole.ambre.title')}</h2>\n            <p>{t('fiole.ambre.detail')}</p>\n            <p>Serge Lutens</p>\n            <ModalParfum\n              isOpen={modalActive === '3'}\n              image={imageAmbre}\n              image2x={imageAmbre2x}\n              title={t('fiole.ambre.title')}\n              content={t('fiole.ambre.content')}\n              onClose={() => setModalActive('')}\n            />\n            <Button variant=\"outline-light\" onClick={() => setModalActive('3')}>\n              {t('fiole.decouvrir')}\n            </Button>\n          </div>\n        </li>\n        <li\n          className={active === '4' ? 'active' : ''}\n          onClick={() => {\n            if (vialsFull) setActive('4');\n          }}>\n          <div className=\"section-title\">\n            {/* FIOLE CHAANGEE */}\n            <img className={`smoke-opacity ${smoke_4}`} src={fumeeFleurOranger}></img>\n            <img className=\"clickable vial vial-silhouette\" src={fioleSilhouetteTransparente} />\n\n            <img\n              className={`clickable vial vial-full ${inv_to_visible4}`}\n              src={fioleFleurDoranger}\n              srcSet={fioleFleurDoranger2x}\n            />\n            <img\n              onMouseEnter={() => {\n                setVial4Anim(true);\n              }}\n              className={`clickable vial vial-empty-4 ${vial4_empty_anim} ${visible_to_inv4}`}\n              src={fioleVerreFumee}\n            />\n          </div>\n          <div className=\"section-content\">\n            <h2>{t('fiole.fleursdoranger.title')}</h2>\n            <p>{t('fiole.fleursdoranger.detail')}</p>\n            <p>Serge Lutens</p>\n            <ModalParfum\n              isOpen={modalActive === '4'}\n              image={imageFleurDoranger}\n              image2x={imageFleurDoranger2x}\n              title={t('fiole.fleursdoranger.title')}\n              content={t('fiole.fleursdoranger.content')}\n              onClose={() => setModalActive('')}\n            />\n            <Button variant=\"outline-light\" onClick={() => setModalActive('4')}>\n              {t('fiole.decouvrir')}\n            </Button>\n          </div>\n        </li>\n        <li\n          className={active === '5' ? 'active' : ''}\n          onClick={() => {\n            if (vialsFull) setActive('5');\n          }}>\n          <div className=\"section-title\">\n            {/* FIOLE CHAANGEE */}\n            <img className={`smoke-opacity ${smoke_5}`} src={fumeeBoisVanille}></img>\n            <img className=\"clickable vial vial-silhouette\" src={fioleSilhouetteTransparente} />\n\n            <img\n              className={`clickable vial vial-full ${inv_to_visible5}`}\n              src={fioleBoisVanille}\n              srcSet={fioleBoisVanille2x}\n            />\n            <img\n              onMouseEnter={() => {\n                setVial5Anim(true);\n              }}\n              className={`clickable vial vial-empty-5 ${vial5_empty_anim} ${visible_to_inv5}`}\n              src={fioleVerreFumee}\n            />\n          </div>\n          <div className=\"section-content\">\n            <h2>{t('fiole.boisvanille.title')}</h2>\n            <p>{t('fiole.boisvanille.detail')}</p>\n            <p>Serge Lutens</p>\n            <ModalParfum\n              isOpen={modalActive === '5'}\n              image={imageBoisVanille}\n              image2x={imageBoisVanille2x}\n              title={t('fiole.boisvanille.title')}\n              content={t('fiole.boisvanille.content')}\n              onClose={() => setModalActive('')}\n            />\n            <Button variant=\"outline-light\" onClick={() => setModalActive('5')}>\n              {t('fiole.decouvrir')}\n            </Button>\n          </div>\n        </li>\n        <li\n          className={active === '6' ? 'active' : ''}\n          onClick={() => {\n            if (vialsFull) setActive('6');\n          }}>\n          <div className=\"section-title\">\n            {/* FIOLE CHAANGEE */}\n            <img className={`smoke-opacity ${smoke_6}`} src={fumeeNuitCellophane}></img>\n            <img className=\"clickable vial vial-silhouette\" src={fioleSilhouetteTransparente} />\n            <img\n              className={`clickable vial vial-full ${inv_to_visible6}`}\n              src={fioleNuitCellophane}\n              srcSet={fioleNuitCellophane2x}\n            />\n            <img\n              onMouseEnter={() => {\n                setVial6Anim(true);\n              }}\n              className={`clickable vial vial-empty-6 ${vial6_empty_anim} ${visible_to_inv6}`}\n              src={fioleVerreFumee}\n            />\n          </div>\n          <div className=\"section-content\">\n            <h2>{t('fiole.nuitcellophane.title')}</h2>\n            <p>{t('fiole.nuitcellophane.detail')}</p>\n            <p>Serge Lutens</p>\n            <ModalParfum\n              isOpen={modalActive === '6'}\n              image={imageNuitCellophane}\n              image2x={imageNuitCellophane2x}\n              title={t('fiole.nuitcellophane.title')}\n              content={t('fiole.nuitcellophane.content')}\n              onClose={() => setModalActive('')}\n            />\n            <Button variant=\"outline-light\" onClick={() => setModalActive('6')}>\n              {t('fiole.decouvrir')}\n            </Button>\n          </div>\n        </li>\n        <li\n          className={active === '7' ? 'active' : ''}\n          onClick={() => {\n            if (vialsFull) setActive('7');\n          }}>\n          <div className=\"section-title\">\n            {/* FIOLE CHAANGEE */}\n            <img className={`smoke-opacity ${smoke_7}`} src={fumeeFeminite}></img>\n            <img className=\"clickable vial vial-silhouette\" src={fioleSilhouetteTransparente} />\n            <img\n              className={`clickable vial vial-full ${inv_to_visible7}`}\n              src={fioleFeminite}\n              srcSet={fioleFeminite2x}\n            />\n            <img\n              onMouseEnter={() => {\n                setVial7Anim(true);\n              }}\n              className={`clickable vial vial-empty-7 ${vial7_empty_anim} ${visible_to_inv7}`}\n              src={fioleVerreFumee}\n            />\n          </div>\n          <div className=\"section-content\">\n            <h2>{t('fiole.feminitebois.title')}</h2>\n            <p>{t('fiole.feminitebois.detail')}</p>\n            <p>Serge Lutens</p>\n            <ModalParfum\n              isOpen={modalActive === '7'}\n              image={imageFeminite}\n              image2x={imageFeminite2x}\n              title={t('fiole.feminitebois.title')}\n              content={t('fiole.feminitebois.content')}\n              onClose={() => setModalActive('')}\n            />\n            <Button variant=\"outline-light\" onClick={() => setModalActive('7')}>\n              {t('fiole.decouvrir')}\n            </Button>\n          </div>\n        </li>\n        <li\n          className={active === '8' ? 'active' : ''}\n          onClick={() => {\n            if (vialsFull) setActive('8');\n          }}>\n          <div className=\"section-title\">\n            {/* FIOLE CHAANGEE */}\n            <img className={`smoke-opacity ${smoke_8}`} src={fumeeLOrpheline}></img>\n            <img className=\"clickable vial vial-silhouette\" src={fioleSilhouetteTransparente} />\n            <img\n              className={`clickable vial vial-full ${inv_to_visible8}`}\n              src={fioleLorpheline}\n              srcSet={fioleLorpheline2x}\n            />\n            <img\n              onMouseEnter={() => {\n                setVial8Anim(true);\n              }}\n              className={`clickable vial vial-empty-8 ${vial8_empty_anim} ${visible_to_inv8}`}\n              src={fioleVerreFumee}\n            />\n          </div>\n          <div className=\"section-content\">\n            <h2>{t('fiole.lorpheline.title')}</h2>\n            <p>{t('fiole.lorpheline.detail')}</p>\n            <p>Serge Lutens</p>\n            <ModalParfum\n              isOpen={modalActive === '8'}\n              image={imageLorpheline}\n              image2x={imageLorpheline2x}\n              title={t('fiole.lorpheline.title')}\n              content={t('fiole.lorpheline.content')}\n              onClose={() => setModalActive('')}\n            />\n            <Button variant=\"outline-light\" onClick={() => setModalActive('8')}>\n              {t('fiole.decouvrir')}\n            </Button>\n          </div>\n        </li>\n      </ul>\n      <div className=\"bar-navigation-action\">\n        <Button variant=\"outline-light\" onClick={props.onShare}>\n          {t('fiole.partager')}\n        </Button>\n        <img className=\"arrow-down\" src={arrowDown} srcSet={arrowDown2x} />\n      </div>\n    </div>\n  );\n}\n\n// function BarNavigation(props: Props): JSX.Element {\n//   const {t} = props;\n//   const [active, setActive] = useState('');\n//   const [modalActive, setModalActive] = useState('');\n//   return (\n//     <ul className=\"bar-navigation\">\n//       <li className={active === '1' ? 'active' : ''} onClick={() => setActive('1')}>\n//         <div className=\"section-title\">\n//           {/* FIOLE 1 CHAANGEE */}\n//           {/* <img className=\"clickable\" src={fioleVerreFumee} /> */}\n//           <img className=\"clickable\" src={fioleFilsJoie} srcSet={fioleFilsJoie2x} />\n//         </div>\n//         <div className=\"section-content\">\n//           <h2>{t('fiole.filsdejoie.title')}</h2>\n//           <p>{t('fiole.filsdejoie.detail')}</p>\n//           <p>Serge Lutens</p>\n//           <ModalParfum\n//             isOpen={modalActive === '1'}\n//             image={imageFilsJoie}\n//             image2x={imageFilsJoie2x}\n//             title={t('fiole.filsdejoie.title')}\n//             content={t('fiole.filsdejoie.content')}\n//             onClose={() => setModalActive('')}\n//           />\n//           <Button variant=\"outline-light\" onClick={() => setModalActive('1')}>\n//             {t('fiole.decouvrir')}\n//           </Button>\n//         </div>\n//       </li>\n//       <li className={active === '2' ? 'active' : ''} onClick={() => setActive('2')}>\n//         <div className=\"section-title\">\n//           <img className=\"clickable\" src={fioleFilleBerlin} srcSet={fioleFilleBerlin2x} />\n//         </div>\n//         <div className=\"section-content\">\n//           <h2>{t('fiole.filleberlin.title')}</h2>\n//           <p>{t('fiole.filleberlin.detail')}</p>\n//           <p>Serge Lutens</p>\n//           <ModalParfum\n//             isOpen={modalActive === '2'}\n//             image={imageFilleBerlin}\n//             image2x={imageFilleBerlin2x}\n//             title={t('fiole.filleberlin.title')}\n//             content={t('fiole.filleberlin.content')}\n//             onClose={() => setModalActive('')}\n//           />\n//           <Button variant=\"outline-light\" onClick={() => setModalActive('2')}>\n//             {t('fiole.decouvrir')}\n//           </Button>\n//         </div>\n//       </li>\n//       <li className={active === '3' ? 'active' : ''} onClick={() => setActive('3')}>\n//         <div className=\"section-title\">\n//           <img className=\"clickable\" src={fioleAmbre} srcSet={fioleAmbre2x} />\n//         </div>\n//         <div className=\"section-content\">\n//           <h2>{t('fiole.ambre.title')}</h2>\n//           <p>{t('fiole.ambre.detail')}</p>\n//           <p>Serge Lutens</p>\n//           <ModalParfum\n//             isOpen={modalActive === '3'}\n//             image={imageAmbre}\n//             image2x={imageAmbre2x}\n//             title={t('fiole.ambre.title')}\n//             content={t('fiole.ambre.content')}\n//             onClose={() => setModalActive('')}\n//           />\n//           <Button variant=\"outline-light\" onClick={() => setModalActive('3')}>\n//             {t('fiole.decouvrir')}\n//           </Button>\n//         </div>\n//       </li>\n//       <li className={active === '4' ? 'active' : ''} onClick={() => setActive('4')}>\n//         <div className=\"section-title\">\n//           <img className=\"clickable\" src={fioleFleurDoranger} srcSet={fioleFleurDoranger2x} />\n//         </div>\n//         <div className=\"section-content\">\n//           <h2>{t('fiole.fleursdoranger.title')}</h2>\n//           <p>{t('fiole.fleursdoranger.detail')}</p>\n//           <p>Serge Lutens</p>\n//           <ModalParfum\n//             isOpen={modalActive === '4'}\n//             image={imageFleurDoranger}\n//             image2x={imageFleurDoranger2x}\n//             title={t('fiole.fleursdoranger.title')}\n//             content={t('fiole.fleursdoranger.content')}\n//             onClose={() => setModalActive('')}\n//           />\n//           <Button variant=\"outline-light\" onClick={() => setModalActive('4')}>\n//             {t('fiole.decouvrir')}\n//           </Button>\n//         </div>\n//       </li>\n//       <li className={active === '5' ? 'active' : ''} onClick={() => setActive('5')}>\n//         <div className=\"section-title\">\n//           <img className=\"clickable\" src={fioleBoisVanille} srcSet={fioleBoisVanille2x} />\n//         </div>\n//         <div className=\"section-content\">\n//           <h2>{t('fiole.boisvanille.title')}</h2>\n//           <p>{t('fiole.boisvanille.detail')}</p>\n//           <p>Serge Lutens</p>\n//           <ModalParfum\n//             isOpen={modalActive === '5'}\n//             image={imageBoisVanille}\n//             image2x={imageBoisVanille2x}\n//             title={t('fiole.boisvanille.title')}\n//             content={t('fiole.boisvanille.content')}\n//             onClose={() => setModalActive('')}\n//           />\n//           <Button variant=\"outline-light\" onClick={() => setModalActive('5')}>\n//             {t('fiole.decouvrir')}\n//           </Button>\n//         </div>\n//       </li>\n//       <li className={active === '6' ? 'active' : ''} onClick={() => setActive('6')}>\n//         <div className=\"section-title\">\n//           <img className=\"clickable\" src={fioleNuitCellophane} srcSet={fioleNuitCellophane2x} />\n//         </div>\n//         <div className=\"section-content\">\n//           <h2>{t('fiole.nuitcellophane.title')}</h2>\n//           <p>{t('fiole.nuitcellophane.detail')}</p>\n//           <p>Serge Lutens</p>\n//           <ModalParfum\n//             isOpen={modalActive === '6'}\n//             image={imageNuitCellophane}\n//             image2x={imageNuitCellophane2x}\n//             title={t('fiole.nuitcellophane.title')}\n//             content={t('fiole.nuitcellophane.content')}\n//             onClose={() => setModalActive('')}\n//           />\n//           <Button variant=\"outline-light\" onClick={() => setModalActive('6')}>\n//             {t('fiole.decouvrir')}\n//           </Button>\n//         </div>\n//       </li>\n//       <li className={active === '7' ? 'active' : ''} onClick={() => setActive('7')}>\n//         <div className=\"section-title\">\n//           <img className=\"clickable\" src={fioleFeminite} srcSet={fioleFeminite2x} />\n//         </div>\n//         <div className=\"section-content\">\n//           <h2>{t('fiole.feminitebois.title')}</h2>\n//           <p>{t('fiole.feminitebois.detail')}</p>\n//           <p>Serge Lutens</p>\n//           <ModalParfum\n//             isOpen={modalActive === '7'}\n//             image={imageFeminite}\n//             image2x={imageFeminite2x}\n//             title={t('fiole.feminitebois.title')}\n//             content={t('fiole.feminitebois.content')}\n//             onClose={() => setModalActive('')}\n//           />\n//           <Button variant=\"outline-light\" onClick={() => setModalActive('7')}>\n//             {t('fiole.decouvrir')}\n//           </Button>\n//         </div>\n//       </li>\n//       <li className={active === '8' ? 'active' : ''} onClick={() => setActive('8')}>\n//         <div className=\"section-title\">\n//           <img className=\"clickable\" src={fioleLorpheline} srcSet={fioleLorpheline2x} />\n//         </div>\n//         <div className=\"section-content\">\n//           <h2>{t('fiole.lorpheline.title')}</h2>\n//           <p>{t('fiole.lorpheline.detail')}</p>\n//           <p>Serge Lutens</p>\n//           <ModalParfum\n//             isOpen={modalActive === '8'}\n//             image={imageLorpheline}\n//             image2x={imageLorpheline2x}\n//             title={t('fiole.lorpheline.title')}\n//             content={t('fiole.lorpheline.content')}\n//             onClose={() => setModalActive('')}\n//           />\n//           <Button variant=\"outline-light\" onClick={() => setModalActive('8')}>\n//             {t('fiole.decouvrir')}\n//           </Button>\n//         </div>\n//       </li>\n//       <div className=\"bar-navigation-action\">\n//         <img className=\"arrow-down\" src={arrowDown} srcSet={arrowDown2x} />\n//         <Button onClick={props.goHome} className=\"homepage\" variant=\"outline-light\">\n//           {t('fiole.homepage')} &gt;\n//         </Button>\n//       </div>\n//     </ul>\n//   );\n// }\n\nexport default withTranslation()(BarNavigation);\n","/home/slechani/dompteuse-react/src/store/localStorage.ts",[],"/home/slechani/dompteuse-react/src/store/root/reducers.ts",[],"/home/slechani/dompteuse-react/src/store/root/types.ts",[],"/home/slechani/dompteuse-react/src/graphql/mutations.ts",[],"/home/slechani/dompteuse-react/src/components/buttonunlocktwo/ButtonUnlockTwo.tsx",["218"],"import React, {useState} from 'react';\nimport imageEnDefault from './Button_2-EN_Unlock_Default.png';\nimport imageEnHover from './Button_2-EN_Unlock_hover.png';\nimport imageEnSelected from './Button_2-EN_Unlock_selected.png';\nimport imageFrDefault from './Button_2-FR_Unlock_Default.png';\nimport imageFrHover from './Button_2-FR_Unlock_hover.png';\nimport imageFrSelected from './Button_2-FR_Unlock_selected.png';\nimport imageEsDefault from './Button_2-ES_Unlock_Default.png';\nimport imageEsHover from './Button_2-ES_Unlock_hover.png';\nimport imageEsSelected from './Button_2-ES_Unlock_selected.png';\nimport './ButtonUnlockTwo.css';\n\ntype Props = {\n  lang: string;\n  className?: string;\n  onClick?: () => void;\n};\n\nfunction ButtonUnlockTwo(props: Props): JSX.Element {\n  const {lang} = props;\n  const [hover, setHover] = useState(false);\n  const [push, setPush] = useState(false);\n  let imageSelected;\n  let imageHover;\n  let imageDefault;\n  if (lang === 'fr') {\n    imageDefault = imageFrDefault;\n    imageHover = imageFrHover;\n    imageSelected = imageFrSelected;\n  } else if (lang === 'en') {\n    imageDefault = imageEnDefault;\n    imageHover = imageEnHover;\n    imageSelected = imageEnSelected;\n  } else if (lang === 'es') {\n    imageDefault = imageEsDefault;\n    imageHover = imageEsHover;\n    imageSelected = imageEsSelected;\n  }\n  return (\n    <img\n      className={`clickable btn-unlock btn-unlock-two ${props.className ?? ''}`}\n      src={push ? imageSelected : hover ? imageHover : imageDefault}\n      onMouseOver={() => setHover(true)}\n      onMouseOut={() => setHover(false)}\n      onMouseDown={() => setPush(true)}\n      onMouseUp={() => setPush(false)}\n      onClick={props.onClick}\n    />\n  );\n}\n\nexport default ButtonUnlockTwo;\n","/home/slechani/dompteuse-react/src/components/buttonunlockthree/ButtonUnlockThree.tsx",["219"],"import React, {useState} from 'react';\nimport imageEnDefault from './Button_3-EN_Unlock_Default.png';\nimport imageEnHover from './Button_3-EN_Unlock_hover.png';\nimport imageEnSelected from './Button_3-EN_Unlock_selected.png';\nimport imageFrDefault from './Button_3-FR_Unlock_Default.png';\nimport imageFrHover from './Button_3-FR_Unlock_hover.png';\nimport imageFrSelected from './Button_3-FR_Unlock_selected.png';\nimport imageEsDefault from './Button_3-ES_Unlock_Default.png';\nimport imageEsHover from './Button_3-ES_Unlock_hover.png';\nimport imageEsSelected from './Button_3-ES_Unlock_selected.png';\nimport './ButtonUnlockThree.css';\n\ntype Props = {\n  lang: string;\n  className?: string;\n  onClick?: () => void;\n};\n\nfunction ButtonUnlockThree(props: Props): JSX.Element {\n  const {lang} = props;\n  const [hover, setHover] = useState(false);\n  const [push, setPush] = useState(false);\n  let imageSelected;\n  let imageHover;\n  let imageDefault;\n  if (lang === 'fr') {\n    imageDefault = imageFrDefault;\n    imageHover = imageFrHover;\n    imageSelected = imageFrSelected;\n  } else if (lang === 'en') {\n    imageDefault = imageEnDefault;\n    imageHover = imageEnHover;\n    imageSelected = imageEnSelected;\n  } else if (lang === 'es') {\n    imageDefault = imageEsDefault;\n    imageHover = imageEsHover;\n    imageSelected = imageEsSelected;\n  }\n  return (\n    <img\n      className={`clickable btn-unlock btn-unlock-three ${props.className ?? ''}`}\n      src={push ? imageSelected : hover ? imageHover : imageDefault}\n      onMouseOver={() => setHover(true)}\n      onMouseOut={() => setHover(false)}\n      onMouseDown={() => setPush(true)}\n      onMouseUp={() => setPush(false)}\n      onClick={props.onClick}\n    />\n  );\n}\n\nexport default ButtonUnlockThree;\n","/home/slechani/dompteuse-react/src/components/modalparfum/ModalParfum.tsx",["220","221","222"],"import React from 'react';\nimport Modal from 'react-modal';\nimport SimpleBar from 'simplebar-react';\nimport {isMobile} from 'mobile-device-detect';\n\nimport 'simplebar/dist/simplebar.min.css';\nimport './ModalParfum.css';\n\nimport backgroundTile from '../../assets/img/background-tile.png';\nimport closeBtn from '../../assets/img/button_close.png';\nimport closeBtn2x from '../../assets/img/button_close@2x.png';\n\nModal.setAppElement('#root');\n\nconst styles: Modal.Styles = {\n  overlay: {\n    zIndex: 10,\n    backgroundRepeat: 'repeat',\n    backgroundImage: 'url(' + backgroundTile + ')',\n  },\n  content: {\n    border: 'none',\n    padding: 0,\n    backgroundColor: 'black',\n    overflowY: 'scroll',\n    width: isMobile ? 'fit-content' : '',\n    top: 30,\n    bottom: 30,\n    left: 20,\n    right: 20,\n  },\n};\n\ntype Props = {\n  isOpen: boolean;\n  image: string;\n  image2x?: string;\n  title: string;\n  content: string;\n  onClose?: () => void;\n};\n\nfunction ModalParfum(props: Props): JSX.Element {\n  const {isOpen, image, title, content, image2x, onClose} = props;\n  return (\n    <Modal isOpen={isOpen} style={styles}>\n      <div className=\"modal-parfum\">\n        <img className=\"img-desktop\" src={image} srcSet={image2x} />\n        <div className=\"content\">\n          <h2>{title}</h2>\n          <img className=\"img-mobile\" src={image} srcSet={image2x} />\n          {isMobile ? (\n            <div className=\"parfum-description\">\n              {content}\n              <p style={{marginTop: 10}}>Serge Lutens</p>\n            </div>\n          ) : (\n            <SimpleBar style={{maxHeight: 300, padding: 5, fontSize: 18, textAlign: 'justify', paddingRight: 10}}>\n              {content}\n              <p style={{marginTop: 10}}>Serge Lutens</p>\n            </SimpleBar>\n          )}\n        </div>\n        <div className=\"close-btn\">\n          <img src={closeBtn} srcSet={closeBtn2x} onClick={onClose} />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default ModalParfum;\n","/home/slechani/dompteuse-react/src/components/languageselector/LanguageSelector.tsx",["223","224"],"import React, {FormEvent, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport EN_default from './Button_EN_Default.png';\nimport EN_default2x from './Button_EN_Default@2x.png';\nimport EN_hover from './Button_EN_Hover.png';\nimport EN_hover2x from './Button_EN_Hover@2x.png';\n\nimport FR_default from './Button_FR_Default.png';\nimport FR_default2x from './Button_FR_Default@2x.png';\nimport FR_hover from './Button_FR_Hover.png';\nimport FR_hover2x from './Button_FR_Hover@2x.png';\n\nimport './LanguageSelector.css';\n\nconst LanguageSelector = (): JSX.Element => {\n  const {i18n} = useTranslation();\n  const [hoverLang, setHoverLang] = useState('');\n\n  const changeLanguage = (event: FormEvent<HTMLInputElement>) => {\n    console.log(event.currentTarget.value);\n    i18n.changeLanguage(event.currentTarget.value);\n  };\n\n  return (\n    <div className=\"language-selector\">\n      <label htmlFor=\"fr\">\n        <img\n          className=\"clickable\"\n          src={hoverLang === 'fr' ? FR_hover : FR_default}\n          srcSet={hoverLang === 'fr' ? FR_hover2x : FR_default2x}\n          onMouseOver={() => setHoverLang('fr')}\n          onMouseOut={() => setHoverLang('')}\n        />\n        <input id=\"fr\" type=\"radio\" style={{display: 'none'}} value=\"fr\" name=\"language\" onChange={changeLanguage} />\n      </label>\n      <label htmlFor=\"en\">\n        <img\n          className=\"clickable\"\n          src={hoverLang === 'en' ? EN_hover : EN_default}\n          srcSet={hoverLang === 'en' ? EN_hover2x : EN_default2x}\n          onMouseOver={() => setHoverLang('en')}\n          onMouseOut={() => setHoverLang('')}\n        />\n        <input id=\"en\" type=\"radio\" style={{display: 'none'}} value=\"en\" name=\"language\" onChange={changeLanguage} />\n      </label>\n      {/*<label htmlFor=\"es\">\n        <img\n          className=\"clickable\"\n          src={hoverLang === 'es' ? ES_hover : ES_default}\n          srcSet={hoverLang === 'es' ? ES_hover2x : ES_default2x}\n          onMouseOver={() => setHoverLang('es')}\n          onMouseOut={() => setHoverLang('')}\n        />\n        <input id=\"es\" type=\"radio\" style={{display: 'none'}} value=\"es\" name=\"language\" onChange={changeLanguage} />\n      </label>*/}\n      {/*<label htmlFor=\"en\">\n        <input id=\"zh-hk\" type=\"radio\" value=\"zh-hk\" name=\"language\" onChange={changeLanguage} />\n      </label>*/}\n    </div>\n  );\n};\n\nexport default LanguageSelector;\n","/home/slechani/dompteuse-react/src/components/playButton/PlayButton.tsx",["225"],"import React, {useState} from 'react';\nimport playLogo from './Play.png';\n//import playLogoHover from './Play_Hover.png';\nimport './PlayButton.css';\n\ntype Props = {\n  className?: string;\n  show: boolean;\n  onClick?: () => void;\n};\n\nfunction PlayButton(props: Props): JSX.Element {\n  const {onClick} = props;\n  const [hover, setHover] = useState(false);\n  const src = hover ? playLogo : playLogo;\n  return props.show ? (\n    <img\n      className={`clickable playButton ${props.className ?? ''} ${hover ? 'hover' : ''}`}\n      src={src}\n      onClick={onClick}\n      onMouseOver={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    />\n  ) : (\n    <></>\n  );\n}\n\nexport default PlayButton;\n","/home/slechani/dompteuse-react/src/components/mute/Mute.tsx",["226"],"import React, {useState, useEffect} from 'react';\nimport {WithTranslation, withTranslation} from 'react-i18next';\n\nimport muteLogo from './Mute.png';\nimport muteLogoHover from './Mute_Hover.png';\nimport unmuteLogo from './Unmute.png';\nimport unmuteLogoHover from './Unmute_Hover.png';\nimport './Mute.css';\n\ntype StateProps = {\n  className?: string;\n  isMuted: boolean;\n  isAnimated?: boolean;\n  onClick?: () => void;\n};\n\ntype Props = StateProps & WithTranslation;\n\nfunction Mute(props: Props): JSX.Element {\n  const {onClick, isMuted, isAnimated, t} = props;\n  const [hover, setHover] = useState(false);\n  const [isTimeout, setIsTimeout] = useState(false);\n  const src = !isMuted ? (hover ? unmuteLogoHover : unmuteLogo) : hover ? muteLogoHover : muteLogo;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsTimeout(true);\n    }, 3000);\n  });\n\n  return (\n    <div className={`mute-container ${isAnimated && !isTimeout && isMuted ? 'is-animated' : ''}`}>\n      <img\n        className={`clickable mute ${props.className ?? ''}`}\n        src={src}\n        onClick={onClick}\n        onMouseOver={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      />\n      {isMuted ? (\n        <p className=\"mute-text\">\n          <span>{t('video.unmute1')}</span>\n          {t('video.unmute2')}\n        </p>\n      ) : null}\n    </div>\n  );\n}\n\nexport default withTranslation()(Mute);\n","/home/slechani/dompteuse-react/src/components/buttonunlockone/ButtonUnlockOne.tsx",["227"],"import React, {useState} from 'react';\nimport imageEnDefault from './Button_1-EN_Unlock_Default.png';\nimport imageEnHover from './Button_1-EN_Unlock_hover.png';\nimport imageEnSelected from './Button_1-EN_Unlock_selected.png';\nimport imageFrDefault from './Button_1-FR_Unlock_Default.png';\nimport imageFrHover from './Button_1-FR_Unlock_hover.png';\nimport imageFrSelected from './Button_1-FR_Unlock_selected.png';\nimport imageEsDefault from './Button_1-ES_Unlock_Default.png';\nimport imageEsHover from './Button_1-ES_Unlock_hover.png';\nimport imageEsSelected from './Button_1-ES_Unlock_selected.png';\nimport './ButtonUnlockOne.css';\n\ntype Props = {\n  lang: string;\n  className?: string;\n  onClick?: () => void;\n};\n\nfunction ButtonUnlockOne(props: Props): JSX.Element {\n  const {lang} = props;\n  const [hover, setHover] = useState(false);\n  const [push, setPush] = useState(false);\n  let imageSelected;\n  let imageHover;\n  let imageDefault;\n  if (lang === 'fr') {\n    imageDefault = imageFrDefault;\n    imageHover = imageFrHover;\n    imageSelected = imageFrSelected;\n  } else if (lang === 'en') {\n    imageDefault = imageEnDefault;\n    imageHover = imageEnHover;\n    imageSelected = imageEnSelected;\n  } else if (lang === 'es') {\n    imageDefault = imageEsDefault;\n    imageHover = imageEsHover;\n    imageSelected = imageEsSelected;\n  }\n  return (\n    <img\n      className={`clickable btn-unlock btn-unlock-one ${props.className ?? ''}`}\n      src={push ? imageSelected : hover ? imageHover : imageDefault}\n      onMouseOver={() => setHover(true)}\n      onMouseOut={() => setHover(false)}\n      onMouseDown={() => setPush(true)}\n      onMouseUp={() => setPush(false)}\n      onClick={props.onClick}\n    />\n  );\n}\n\nexport default ButtonUnlockOne;\n",{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":118,"column":65,"nodeType":"234","messageId":"235","endLine":118,"endColumn":67},{"ruleId":"236","severity":1,"message":"237","line":141,"column":13,"nodeType":"238","endLine":147,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":150,"column":13,"nodeType":"238","endLine":150,"endColumn":76},{"ruleId":"236","severity":1,"message":"237","line":170,"column":13,"nodeType":"238","endLine":170,"endColumn":54},{"ruleId":"236","severity":1,"message":"237","line":174,"column":13,"nodeType":"238","endLine":174,"endColumn":80},{"ruleId":"239","severity":1,"message":"240","line":9,"column":8,"nodeType":"241","messageId":"242","endLine":9,"endColumn":22},{"ruleId":"239","severity":1,"message":"243","line":76,"column":12,"nodeType":"241","messageId":"242","endLine":76,"endColumn":30},{"ruleId":"236","severity":1,"message":"237","line":105,"column":33,"nodeType":"238","endLine":105,"endColumn":100},{"ruleId":"236","severity":1,"message":"237","line":14,"column":5,"nodeType":"238","endLine":19,"endColumn":7},{"ruleId":"236","severity":1,"message":"237","line":24,"column":5,"nodeType":"238","endLine":30,"endColumn":7},{"ruleId":"236","severity":1,"message":"237","line":10,"column":10,"nodeType":"238","endLine":10,"endColumn":57},{"ruleId":"236","severity":1,"message":"237","line":241,"column":19,"nodeType":"238","endLine":241,"endColumn":38},{"ruleId":"236","severity":1,"message":"237","line":275,"column":13,"nodeType":"238","endLine":275,"endColumn":73},{"ruleId":"236","severity":1,"message":"237","line":70,"column":11,"nodeType":"238","endLine":70,"endColumn":71},{"ruleId":"236","severity":1,"message":"237","line":65,"column":13,"nodeType":"238","endLine":65,"endColumn":65},{"ruleId":"236","severity":1,"message":"237","line":78,"column":13,"nodeType":"238","endLine":78,"endColumn":71},{"ruleId":"236","severity":1,"message":"237","line":91,"column":13,"nodeType":"238","endLine":91,"endColumn":59},{"ruleId":"236","severity":1,"message":"237","line":104,"column":13,"nodeType":"238","endLine":104,"endColumn":75},{"ruleId":"236","severity":1,"message":"237","line":117,"column":13,"nodeType":"238","endLine":117,"endColumn":71},{"ruleId":"236","severity":1,"message":"237","line":130,"column":13,"nodeType":"238","endLine":130,"endColumn":77},{"ruleId":"236","severity":1,"message":"237","line":143,"column":13,"nodeType":"238","endLine":143,"endColumn":65},{"ruleId":"236","severity":1,"message":"237","line":156,"column":13,"nodeType":"238","endLine":156,"endColumn":69},{"ruleId":"236","severity":1,"message":"237","line":172,"column":9,"nodeType":"238","endLine":172,"endColumn":76},{"ruleId":"236","severity":1,"message":"237","line":18,"column":9,"nodeType":"238","endLine":18,"endColumn":55},{"ruleId":"236","severity":1,"message":"237","line":202,"column":13,"nodeType":"238","endLine":202,"endColumn":77},{"ruleId":"236","severity":1,"message":"237","line":203,"column":13,"nodeType":"238","endLine":203,"endColumn":97},{"ruleId":"236","severity":1,"message":"237","line":204,"column":13,"nodeType":"238","endLine":210,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":211,"column":13,"nodeType":"238","endLine":216,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":242,"column":13,"nodeType":"238","endLine":242,"endColumn":75},{"ruleId":"236","severity":1,"message":"237","line":243,"column":13,"nodeType":"238","endLine":243,"endColumn":97},{"ruleId":"236","severity":1,"message":"237","line":244,"column":13,"nodeType":"238","endLine":249,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":250,"column":13,"nodeType":"238","endLine":257,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":283,"column":13,"nodeType":"238","endLine":283,"endColumn":74},{"ruleId":"236","severity":1,"message":"237","line":284,"column":13,"nodeType":"238","endLine":284,"endColumn":97},{"ruleId":"236","severity":1,"message":"237","line":286,"column":13,"nodeType":"238","endLine":286,"endColumn":117},{"ruleId":"236","severity":1,"message":"237","line":287,"column":13,"nodeType":"238","endLine":293,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":319,"column":13,"nodeType":"238","endLine":319,"endColumn":81},{"ruleId":"236","severity":1,"message":"237","line":320,"column":13,"nodeType":"238","endLine":320,"endColumn":97},{"ruleId":"236","severity":1,"message":"237","line":322,"column":13,"nodeType":"238","endLine":326,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":327,"column":13,"nodeType":"238","endLine":333,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":359,"column":13,"nodeType":"238","endLine":359,"endColumn":80},{"ruleId":"236","severity":1,"message":"237","line":360,"column":13,"nodeType":"238","endLine":360,"endColumn":97},{"ruleId":"236","severity":1,"message":"237","line":362,"column":13,"nodeType":"238","endLine":366,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":367,"column":13,"nodeType":"238","endLine":373,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":399,"column":13,"nodeType":"238","endLine":399,"endColumn":83},{"ruleId":"236","severity":1,"message":"237","line":400,"column":13,"nodeType":"238","endLine":400,"endColumn":97},{"ruleId":"236","severity":1,"message":"237","line":401,"column":13,"nodeType":"238","endLine":405,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":406,"column":13,"nodeType":"238","endLine":412,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":438,"column":13,"nodeType":"238","endLine":438,"endColumn":77},{"ruleId":"236","severity":1,"message":"237","line":439,"column":13,"nodeType":"238","endLine":439,"endColumn":97},{"ruleId":"236","severity":1,"message":"237","line":440,"column":13,"nodeType":"238","endLine":444,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":445,"column":13,"nodeType":"238","endLine":451,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":477,"column":13,"nodeType":"238","endLine":477,"endColumn":79},{"ruleId":"236","severity":1,"message":"237","line":478,"column":13,"nodeType":"238","endLine":478,"endColumn":97},{"ruleId":"236","severity":1,"message":"237","line":479,"column":13,"nodeType":"238","endLine":483,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":484,"column":13,"nodeType":"238","endLine":490,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":514,"column":9,"nodeType":"238","endLine":514,"endColumn":76},{"ruleId":"236","severity":1,"message":"237","line":40,"column":5,"nodeType":"238","endLine":48,"endColumn":7},{"ruleId":"236","severity":1,"message":"237","line":40,"column":5,"nodeType":"238","endLine":48,"endColumn":7},{"ruleId":"236","severity":1,"message":"237","line":48,"column":9,"nodeType":"238","endLine":48,"endColumn":69},{"ruleId":"236","severity":1,"message":"237","line":51,"column":11,"nodeType":"238","endLine":51,"endColumn":70},{"ruleId":"236","severity":1,"message":"237","line":65,"column":11,"nodeType":"238","endLine":65,"endColumn":71},{"ruleId":"236","severity":1,"message":"237","line":28,"column":9,"nodeType":"238","endLine":34,"endColumn":11},{"ruleId":"236","severity":1,"message":"237","line":38,"column":9,"nodeType":"238","endLine":44,"endColumn":11},{"ruleId":"236","severity":1,"message":"237","line":17,"column":5,"nodeType":"238","endLine":23,"endColumn":7},{"ruleId":"236","severity":1,"message":"237","line":33,"column":7,"nodeType":"238","endLine":39,"endColumn":9},{"ruleId":"236","severity":1,"message":"237","line":40,"column":5,"nodeType":"238","endLine":48,"endColumn":7},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'ModalChecklist' is defined but never used.","Identifier","unusedVar","'checklistModalOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]