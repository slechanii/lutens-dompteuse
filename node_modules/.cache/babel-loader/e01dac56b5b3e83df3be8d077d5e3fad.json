{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/slechani/react-ladompteuse-website/src/views/main/Main.tsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ButtonUnlockOne from 'src/components/buttonunlockone/ButtonUnlockOne';\nimport ButtonUnlockThree from 'src/components/buttonunlockthree/ButtonUnlockThree';\nimport ButtonUnlockTwo from 'src/components/buttonunlocktwo/ButtonUnlockTwo';\nimport Header from 'src/components/header/Header';\nimport ModalChecklist from 'src/components/modalchecklist/ModalChecklist';\nimport Button from 'react-bootstrap/Button';\nimport validcode from '../../utils/logincode';\nimport { ScrollTrigger, gsap } from 'gsap/all';\ngsap.registerPlugin(ScrollTrigger);\nimport arrowDown from 'src/assets/img/Arrow_down.png';\nimport arrowDown2x from 'src/assets/img/Arrow_down@2x.png';\nimport './Main.css';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      hasCompletedXp,\n      hasVoted\n    } = props;\n    this.state = {\n      checklistModalOpen: hasCompletedXp && !hasVoted,\n      showArrow: true\n    };\n  }\n\n  componentDidMount() {\n    gsap.to(window, {\n      scrollTo: {\n        y: 0\n      },\n      duration: 1\n    });\n    ScrollTrigger.create({\n      trigger: '#main-bottom',\n      start: 'bottom bottom',\n      onEnter: () => {\n        this.setState({\n          showArrow: false\n        });\n      },\n      onLeaveBack: () => {\n        this.setState({\n          showArrow: true\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProp) {\n    const {\n      hasCompletedXp\n    } = this.props;\n\n    if (prevProp.hasCompletedXp !== hasCompletedXp) {\n      this.setState({\n        checklistModalOpen: hasCompletedXp\n      });\n    }\n  }\n\n  render() {\n    const {\n      checklistModalOpen\n    } = this.state;\n    const {\n      t,\n      history,\n      code,\n      i18n,\n      fade_anim\n    } = this.props;\n    const fade_anim_class = fade_anim ? ' fade-anim ' : ' full-opacity '; // const {t, history, code, i18n} = this.props;\n\n    const lang = i18n.language;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main ${fade_anim_class}  `,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('main.section1.text1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('main.section1.text2')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [t('main.section1.text3'), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            style: {\n              fontWeight: 900\n            },\n            children: t('main.section1.text4')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), this.state.showArrow ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"arrow-down\",\n        src: arrowDown,\n        srcSet: arrowDown2x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section2\",\n        children: /*#__PURE__*/_jsxDEV(ButtonUnlockOne, {\n          lang: lang,\n          onClick: () => history.push({\n            pathname: 'priseconscience'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section3\",\n        children: /*#__PURE__*/_jsxDEV(ButtonUnlockTwo, {\n          lang: lang,\n          onClick: () => history.push({\n            pathname: 'delivrance'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"main-bottom\",\n        className: \"section4\",\n        children: /*#__PURE__*/_jsxDEV(ButtonUnlockThree, {\n          lang: lang,\n          onClick: () => history.push({\n            pathname: 'liberte'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalChecklist, {\n        isOpen: checklistModalOpen,\n        onClose: () => this.setState({\n          checklistModalOpen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-assets\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          href: code ? validcode[code].downloadLinkPress : undefined,\n          variant: \"outline-light\",\n          children: t('main.downloadassets.press')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          href: code ? validcode[code].downloadLinkRs : undefined,\n          variant: \"outline-light\",\n          children: t('main.downloadassets.rs')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    hasCompletedXp: state.completedXp,\n    code: state.code,\n    hasVoted: state.hasVoted\n  };\n};\n\nexport default connect(mapStateToProps)(withTranslation()(withRouter(Main)));","map":{"version":3,"sources":["/home/slechani/react-ladompteuse-website/src/views/main/Main.tsx"],"names":["React","withTranslation","connect","withRouter","ButtonUnlockOne","ButtonUnlockThree","ButtonUnlockTwo","Header","ModalChecklist","Button","validcode","ScrollTrigger","gsap","registerPlugin","arrowDown","arrowDown2x","Main","Component","constructor","props","hasCompletedXp","hasVoted","state","checklistModalOpen","showArrow","componentDidMount","to","window","scrollTo","y","duration","create","trigger","start","onEnter","setState","onLeaveBack","componentDidUpdate","prevProp","render","t","history","code","i18n","fade_anim","fade_anim_class","lang","language","fontWeight","push","pathname","downloadLinkPress","undefined","downloadLinkRs","mapStateToProps","completedXp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withTranslation, WithTranslation} from 'react-i18next';\nimport {connect} from 'react-redux';\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\nimport ButtonUnlockOne from 'src/components/buttonunlockone/ButtonUnlockOne';\nimport ButtonUnlockThree from 'src/components/buttonunlockthree/ButtonUnlockThree';\nimport ButtonUnlockTwo from 'src/components/buttonunlocktwo/ButtonUnlockTwo';\nimport Header from 'src/components/header/Header';\nimport ModalChecklist from 'src/components/modalchecklist/ModalChecklist';\nimport {ReduxAppState} from 'src/store';\nimport Button from 'react-bootstrap/Button';\nimport validcode from '../../utils/logincode';\nimport {ScrollTrigger, gsap} from 'gsap/all';\n\ngsap.registerPlugin(ScrollTrigger);\n\nimport arrowDown from 'src/assets/img/Arrow_down.png';\nimport arrowDown2x from 'src/assets/img/Arrow_down@2x.png';\nimport './Main.css';\n\ntype StateProps = {\n  hasCompletedXp: boolean;\n  code?: string;\n  hasVoted: boolean;\n};\n\ntype OwnProps = {\n  fade_anim: boolean;\n};\n\ntype Prop = StateProps & WithTranslation & RouteComponentProps & OwnProps;\n\ntype State = {\n  checklistModalOpen: boolean;\n  showArrow: boolean;\n};\n\nclass Main extends React.Component<Prop, State> {\n  constructor(props: Prop) {\n    super(props);\n    const {hasCompletedXp, hasVoted} = props;\n    this.state = {\n      checklistModalOpen: hasCompletedXp && !hasVoted,\n      showArrow: true,\n    };\n  }\n\n  componentDidMount() {\n    gsap.to(window, {\n      scrollTo: {\n        y: 0,\n      },\n      duration: 1,\n    });\n    ScrollTrigger.create({\n      trigger: '#main-bottom',\n      start: 'bottom bottom',\n      onEnter: () => {\n        this.setState({showArrow: false});\n      },\n      onLeaveBack: () => {\n        this.setState({showArrow: true});\n      },\n    });\n  }\n\n  componentDidUpdate(prevProp: Prop) {\n    const {hasCompletedXp} = this.props;\n    if (prevProp.hasCompletedXp !== hasCompletedXp) {\n      this.setState({checklistModalOpen: hasCompletedXp});\n    }\n  }\n\n  render() {\n    const {checklistModalOpen} = this.state;\n    const {t, history, code, i18n, fade_anim} = this.props;\n\n    const fade_anim_class = fade_anim ? ' fade-anim ' : ' full-opacity ';\n\n    // const {t, history, code, i18n} = this.props;\n    const lang = i18n.language;\n    return (\n      <div className={`main ${fade_anim_class}  `}>\n        <Header />\n        <section className=\"section1\">\n          <p>{t('main.section1.text1')}</p>\n          <p>{t('main.section1.text2')}</p>\n          <p>\n            {t('main.section1.text3')}\n            <br />\n            <b style={{fontWeight: 900}}>{t('main.section1.text4')}</b>\n          </p>\n          {/* <p>\n            Pour ce premier voyage initiatique digital, nous vous invitons à vivre cette expérience comme une\n            introspection.\n          </p>\n          <p>Laissez-vous guider par votre propre imaginaire, mais sachez que chaque étape compte </p>\n          <p>\n            De l’ombre à la lumière, de l’enfermement à la liberté, révélez l’insoupçonnée :\n            <br />\n            <b style={{fontWeight: 900}}>La dompteuse encagée.</b>\n          </p> */}\n        </section>\n        {this.state.showArrow ? <img className=\"arrow-down\" src={arrowDown} srcSet={arrowDown2x} /> : <></>}\n        <section className=\"section2\">\n          <ButtonUnlockOne lang={lang} onClick={() => history.push({pathname: 'priseconscience'})} />\n        </section>\n        <section className=\"section3\">\n          <ButtonUnlockTwo lang={lang} onClick={() => history.push({pathname: 'delivrance'})} />\n        </section>\n        <section id=\"main-bottom\" className=\"section4\">\n          <ButtonUnlockThree lang={lang} onClick={() => history.push({pathname: 'liberte'})} />\n        </section>\n        <ModalChecklist isOpen={checklistModalOpen} onClose={() => this.setState({checklistModalOpen: false})} />\n        <div className=\"download-assets\">\n          <Button href={code ? validcode[code].downloadLinkPress : undefined} variant=\"outline-light\">\n            {t('main.downloadassets.press')}\n          </Button>\n          <Button href={code ? validcode[code].downloadLinkRs : undefined} variant=\"outline-light\">\n            {t('main.downloadassets.rs')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: ReduxAppState): StateProps => {\n  return {\n    hasCompletedXp: state.completedXp,\n    code: state.code,\n    hasVoted: state.hasVoted,\n  };\n};\n\nexport default connect<StateProps, unknown, unknown, ReduxAppState>(mapStateToProps)(\n  withTranslation()(withRouter(Main)),\n);\n"]},"metadata":{},"sourceType":"module"}