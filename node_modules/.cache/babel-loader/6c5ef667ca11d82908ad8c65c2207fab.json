{"ast":null,"code":"import { API } from 'aws-amplify';\nimport * as mutations from '../../graphql/mutations';\nimport { ROOT_IS_AUTHENTICATED, ROOT_HAS_SEEN_STEP1, ROOT_HAS_SEEN_STEP2, ROOT_HAS_SEEN_STEP3, ROOT_HAS_VOTED, ROOT_HAS_COMPLETED_XP } from './types';\nexport const createVote = vote => {\n  return async dispatch => {\n    await API.graphql({\n      query: mutations.createVote,\n      variables: {\n        input: vote\n      }\n    });\n    return dispatch(hasVoted());\n  };\n};\nexport const hasVoted = () => {\n  return {\n    type: ROOT_HAS_VOTED\n  };\n};\nexport const isAuthentifcated = () => {\n  return {\n    type: ROOT_IS_AUTHENTICATED\n  };\n};\nexport const hasSeenStep1 = () => {\n  return {\n    type: ROOT_HAS_SEEN_STEP1\n  };\n};\nexport const hasSeenStep2 = () => {\n  return {\n    type: ROOT_HAS_SEEN_STEP2\n  };\n};\nexport const hasSeenStep3 = () => {\n  return {\n    type: ROOT_HAS_SEEN_STEP3\n  };\n};\nexport const hasCompletedXp = () => {\n  return {\n    type: ROOT_HAS_COMPLETED_XP\n  };\n};","map":{"version":3,"sources":["/home/slechani/react-ladompteuse-website/src/store/root/actions.ts"],"names":["API","mutations","ROOT_IS_AUTHENTICATED","ROOT_HAS_SEEN_STEP1","ROOT_HAS_SEEN_STEP2","ROOT_HAS_SEEN_STEP3","ROOT_HAS_VOTED","ROOT_HAS_COMPLETED_XP","createVote","vote","dispatch","graphql","query","variables","input","hasVoted","type","isAuthentifcated","hasSeenStep1","hasSeenStep2","hasSeenStep3","hasCompletedXp"],"mappings":"AACA,SAAQA,GAAR,QAAkB,aAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,yBAA3B;AACA,SAEEC,qBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,cANF,EAOEC,qBAPF,QAQO,SARP;AAsBA,OAAO,MAAMC,UAA2F,GACtGC,IADyG,IAEtG;AACH,SAAO,MAAOC,QAAP,IAAqE;AAC1E,UAAMV,GAAG,CAACW,OAAJ,CAAY;AAACC,MAAAA,KAAK,EAAEX,SAAS,CAACO,UAAlB;AAA8BK,MAAAA,SAAS,EAAE;AAACC,QAAAA,KAAK,EAAEL;AAAR;AAAzC,KAAZ,CAAN;AACA,WAAOC,QAAQ,CAACK,QAAQ,EAAT,CAAf;AACD,GAHD;AAID,CAPM;AASP,OAAO,MAAMA,QAAwC,GAAG,MAAM;AAC5D,SAAO;AACLC,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,gBAAgD,GAAG,MAAM;AACpE,SAAO;AACLD,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMgB,YAA4C,GAAG,MAAM;AAChE,SAAO;AACLF,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMgB,YAA4C,GAAG,MAAM;AAChE,SAAO;AACLH,IAAAA,IAAI,EAAEZ;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMgB,YAA4C,GAAG,MAAM;AAChE,SAAO;AACLJ,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMgB,cAA8C,GAAG,MAAM;AAClE,SAAO;AACLL,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {Action, ActionCreator} from 'redux';\nimport {API} from 'aws-amplify';\nimport * as mutations from '../../graphql/mutations';\nimport {\n  RootActionTypes,\n  ROOT_IS_AUTHENTICATED,\n  ROOT_HAS_SEEN_STEP1,\n  ROOT_HAS_SEEN_STEP2,\n  ROOT_HAS_SEEN_STEP3,\n  ROOT_HAS_VOTED,\n  ROOT_HAS_COMPLETED_XP,\n} from './types';\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\nimport {Actions} from './reducers';\nimport {ReduxAppState} from '..';\n\nexport type Vote = {\n  question1: boolean;\n  question2: string;\n  question3: boolean;\n  question4: boolean;\n  question5: string;\n  question6: string;\n};\n\nexport const createVote: ActionCreator<ThunkAction<Promise<Actions>, ReduxAppState, undefined, Actions>> = (\n  vote: Vote,\n) => {\n  return async (dispatch: ThunkDispatch<ReduxAppState, undefined, Action>) => {\n    await API.graphql({query: mutations.createVote, variables: {input: vote}});\n    return dispatch(hasVoted());\n  };\n};\n\nexport const hasVoted: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_HAS_VOTED,\n  };\n};\n\nexport const isAuthentifcated: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_IS_AUTHENTICATED,\n  };\n};\n\nexport const hasSeenStep1: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_HAS_SEEN_STEP1,\n  };\n};\n\nexport const hasSeenStep2: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_HAS_SEEN_STEP2,\n  };\n};\n\nexport const hasSeenStep3: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_HAS_SEEN_STEP3,\n  };\n};\n\nexport const hasCompletedXp: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_HAS_COMPLETED_XP,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}