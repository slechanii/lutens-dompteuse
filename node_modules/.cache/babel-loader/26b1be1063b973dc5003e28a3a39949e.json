{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/slechani/react-ladompteuse-website/src/components/mute/Mute.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport muteLogo from './Mute.png';\nimport muteLogoHover from './Mute_Hover.png';\nimport unmuteLogo from './Unmute.png';\nimport unmuteLogoHover from './Unmute_Hover.png';\nimport './Mute.css';\n\nfunction Mute(props) {\n  _s();\n\n  var _props$className;\n\n  const {\n    onClick,\n    isMuted,\n    t\n  } = props;\n  const [hover, setHover] = useState(false);\n  const src = !isMuted ? hover ? unmuteLogoHover : unmuteLogo : hover ? muteLogoHover : muteLogo;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: `mute ${(_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : ''}`,\n      src: src,\n      onClick: onClick,\n      onMouseOver: () => setHover(true),\n      onMouseLeave: () => setHover(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), isMuted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mute-text\",\n      children: t('video.unmute')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(Mute, \"bRXmKus9fOZFlca/6zXTYU+twGY=\");\n\n_c = Mute;\nexport default withTranslation()(Mute);\n\nvar _c;\n\n$RefreshReg$(_c, \"Mute\");","map":{"version":3,"sources":["/home/slechani/react-ladompteuse-website/src/components/mute/Mute.tsx"],"names":["React","useState","withTranslation","muteLogo","muteLogoHover","unmuteLogo","unmuteLogoHover","Mute","props","onClick","isMuted","t","hover","setHover","src","className"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAyBC,eAAzB,QAA+C,eAA/C;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAO,YAAP;;AAUA,SAASC,IAAT,CAAcC,KAAd,EAAyC;AAAA;;AAAA;;AACvC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAAwBH,KAA9B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMa,GAAG,GAAG,CAACJ,OAAD,GAAYE,KAAK,GAAGN,eAAH,GAAqBD,UAAtC,GAAoDO,KAAK,GAAGR,aAAH,GAAmBD,QAAxF;AACA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,QAAD,oBAAQK,KAAK,CAACO,SAAd,+DAA2B,EAAG,EAD3C;AAEE,MAAA,GAAG,EAAED,GAFP;AAGE,MAAA,OAAO,EAAEL,OAHX;AAIE,MAAA,WAAW,EAAE,MAAMI,QAAQ,CAAC,IAAD,CAJ7B;AAKE,MAAA,YAAY,EAAE,MAAMA,QAAQ,CAAC,KAAD;AAL9B;AAAA;AAAA;AAAA;AAAA,YADF,EAQGH,OAAO,gBAAG;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA,gBAA0BC,CAAC,CAAC,cAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,GAAsD,IARhE;AAAA,kBADF;AAYD;;GAhBQJ,I;;KAAAA,I;AAkBT,eAAeL,eAAe,GAAGK,IAAH,CAA9B","sourcesContent":["import React, {useState} from 'react';\nimport {WithTranslation, withTranslation} from 'react-i18next';\n\nimport muteLogo from './Mute.png';\nimport muteLogoHover from './Mute_Hover.png';\nimport unmuteLogo from './Unmute.png';\nimport unmuteLogoHover from './Unmute_Hover.png';\nimport './Mute.css';\n\ntype StateProps = {\n  className?: string;\n  isMuted: boolean;\n  onClick?: () => void;\n};\n\ntype Props = StateProps & WithTranslation;\n\nfunction Mute(props: Props): JSX.Element {\n  const {onClick, isMuted, t} = props;\n  const [hover, setHover] = useState(false);\n  const src = !isMuted ? (hover ? unmuteLogoHover : unmuteLogo) : hover ? muteLogoHover : muteLogo;\n  return (\n    <>\n      <img\n        className={`mute ${props.className ?? ''}`}\n        src={src}\n        onClick={onClick}\n        onMouseOver={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      />\n      {isMuted ? <p className=\"mute-text\">{t('video.unmute')}</p> : null}\n    </>\n  );\n}\n\nexport default withTranslation()(Mute);\n"]},"metadata":{},"sourceType":"module"}