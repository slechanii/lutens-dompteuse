{"ast":null,"code":"import { API } from 'aws-amplify';\nimport * as mutations from '../../graphql/mutations';\nimport { ROOT_IS_AUTHENTICATED, ROOT_HAS_VOTED, ROOT_HAS_COMPLETED_XP, ROOT_MUTE_VIDEO, ROOT_UNMUTE_VIDEO } from './types';\nexport const createVote = vote => {\n  return async dispatch => {\n    await API.graphql({\n      query: mutations.createVote,\n      variables: {\n        input: vote\n      }\n    });\n    return dispatch(hasVoted());\n  };\n};\nexport const hasVoted = () => {\n  return {\n    type: ROOT_HAS_VOTED\n  };\n};\nexport const isAuthentifcated = code => {\n  return {\n    type: ROOT_IS_AUTHENTICATED,\n    code\n  };\n};\nexport const hasCompletedXp = () => {\n  return {\n    type: ROOT_HAS_COMPLETED_XP\n  };\n};\nexport const muteVideo = () => {\n  return {\n    type: ROOT_MUTE_VIDEO\n  };\n};\nexport const unmuteVideo = () => {\n  return {\n    type: ROOT_UNMUTE_VIDEO\n  };\n};","map":{"version":3,"sources":["/home/slechani/dompteuse-react/src/store/root/actions.ts"],"names":["API","mutations","ROOT_IS_AUTHENTICATED","ROOT_HAS_VOTED","ROOT_HAS_COMPLETED_XP","ROOT_MUTE_VIDEO","ROOT_UNMUTE_VIDEO","createVote","vote","dispatch","graphql","query","variables","input","hasVoted","type","isAuthentifcated","code","hasCompletedXp","muteVideo","unmuteVideo"],"mappings":"AACA,SAAQA,GAAR,QAAkB,aAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,yBAA3B;AACA,SAEEC,qBAFF,EAGEC,cAHF,EAIEC,qBAJF,EAKEC,eALF,EAMEC,iBANF,QAOO,SAPP;AAuBA,OAAO,MAAMC,UAA2F,GACtGC,IADyG,IAEtG;AACH,SAAO,MAAOC,QAAP,IAAqE;AAC1E,UAAMT,GAAG,CAACU,OAAJ,CAAY;AAACC,MAAAA,KAAK,EAAEV,SAAS,CAACM,UAAlB;AAA8BK,MAAAA,SAAS,EAAE;AAACC,QAAAA,KAAK,EAAEL;AAAR;AAAzC,KAAZ,CAAN;AACA,WAAOC,QAAQ,CAACK,QAAQ,EAAT,CAAf;AACD,GAHD;AAID,CAPM;AASP,OAAO,MAAMA,QAAwC,GAAG,MAAM;AAC5D,SAAO;AACLC,IAAAA,IAAI,EAAEZ;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMa,gBAAgD,GAAIC,IAAD,IAAkB;AAChF,SAAO;AACLF,IAAAA,IAAI,EAAEb,qBADD;AAELe,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAA8C,GAAG,MAAM;AAClE,SAAO;AACLH,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMe,SAAyC,GAAG,MAAM;AAC7D,SAAO;AACLJ,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMe,WAA2C,GAAG,MAAM;AAC/D,SAAO;AACLL,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJM","sourcesContent":["import {Action, ActionCreator} from 'redux';\nimport {API} from 'aws-amplify';\nimport * as mutations from '../../graphql/mutations';\nimport {\n  RootActionTypes,\n  ROOT_IS_AUTHENTICATED,\n  ROOT_HAS_VOTED,\n  ROOT_HAS_COMPLETED_XP,\n  ROOT_MUTE_VIDEO,\n  ROOT_UNMUTE_VIDEO,\n} from './types';\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\nimport {Actions} from './reducers';\nimport {ReduxAppState} from '..';\n\nexport type Vote = {\n  question1: boolean;\n  question2: string;\n  question3: string;\n  question4: boolean;\n  question5: boolean;\n  question6: string;\n  question7: string;\n  code: string;\n};\n\nexport const createVote: ActionCreator<ThunkAction<Promise<Actions>, ReduxAppState, undefined, Actions>> = (\n  vote: Vote,\n) => {\n  return async (dispatch: ThunkDispatch<ReduxAppState, undefined, Action>) => {\n    await API.graphql({query: mutations.createVote, variables: {input: vote}});\n    return dispatch(hasVoted());\n  };\n};\n\nexport const hasVoted: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_HAS_VOTED,\n  };\n};\n\nexport const isAuthentifcated: ActionCreator<RootActionTypes> = (code: string) => {\n  return {\n    type: ROOT_IS_AUTHENTICATED,\n    code,\n  };\n};\n\nexport const hasCompletedXp: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_HAS_COMPLETED_XP,\n  };\n};\n\nexport const muteVideo: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_MUTE_VIDEO,\n  };\n};\n\nexport const unmuteVideo: ActionCreator<RootActionTypes> = () => {\n  return {\n    type: ROOT_UNMUTE_VIDEO,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}