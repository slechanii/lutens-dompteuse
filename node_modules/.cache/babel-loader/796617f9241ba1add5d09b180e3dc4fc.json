{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/slechani/react-ladompteuse-website/src/components/videomodal/VideoModal.tsx\";\nimport React, { createRef } from 'react';\nimport videojs from 'video.js';\nimport gsap from 'gsap';\nimport Modal from 'react-modal';\nimport { isMobile } from 'mobile-device-detect';\nimport Mute from '../mute/Mute';\nimport './VideoModal.css';\nimport { connect } from 'react-redux';\nimport { muteVideo, unmuteVideo } from 'src/store/root/actions';\nModal.setAppElement('#root');\nconst styles = {\n  content: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    inset: 0,\n    width: '100vw',\n    height: '100vh',\n    padding: 0,\n    overflow: 'hidden',\n    border: 'none',\n    zIndex: 3000,\n    backgroundColor: 'black'\n  },\n  overlay: {\n    zIndex: 10,\n    backgroundColor: 'black'\n  }\n};\nconst options = {\n  html5: true,\n  fluid: true,\n  loop: false,\n\n  /*muted: true,*/\n  controls: false,\n  fill: true,\n  preload: 'auto'\n};\n\nclass VideoModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.ref = /*#__PURE__*/createRef();\n    this.videoJs = null;\n\n    this._setupVideoJs = () => {\n      var _this$ref$current;\n\n      console.log('_setupVideoJs');\n      const videoElement = (_this$ref$current = this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.querySelector('video');\n      console.log({\n        videoElement,\n        ref: this.ref.current\n      });\n\n      if (videoElement !== undefined && videoElement !== null) {\n        this.videoJs = videojs(videoElement, options);\n        this.videoJs.one('ended', () => this._onVideoEnd());\n        this.videoJs.muted(this.props.videoMuted);\n        this.videoJs.loop(false);\n        this.videoJs.playsinline(true);\n        this.videoJs.autoplay(true);\n\n        if (isMobile) {\n          this.videoJs.play();\n        }\n      }\n    };\n\n    this._dispose = () => {\n      console.log('_dispose');\n\n      if (this.videoJs !== null) {\n        this.videoJs.dispose();\n        this.videoJs = null;\n      }\n    };\n\n    this._onVideoEnd = () => {\n      console.log('_onVideoEnd');\n      gsap.timeline({\n        onComplete: () => {\n          if (this.props.onVideoEnded) {\n            this.props.onVideoEnded();\n          }\n        }\n      }).to(this.ref.current, {\n        opacity: 0,\n        duration: 3\n      });\n    };\n\n    this._onAfterOpen = () => {\n      console.log('_onAfterOpen');\n\n      this._setupVideoJs();\n\n      gsap.fromTo(this.ref.current, {\n        opacity: 0\n      }, {\n        opacity: 1,\n        duration: 3\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.videoJs === null) {\n      this._setupVideoJs();\n    }\n  }\n\n  render() {\n    const {\n      isOpen,\n      video,\n      videoWebm,\n      videoMuted,\n      hasMuteAnimation\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      style: styles,\n      onAfterOpen: this._onAfterOpen,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-modal\",\n        ref: this.ref,\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          className: `video-js vjs-control-bar ${isMobile ? '' : 'vjs-16-9'}`,\n          muted: videoMuted,\n          playsInline: true,\n          \"webkit-playsinline\": \"true\",\n          controls: false,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: video,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n            src: videoWebm,\n            type: \"video/webm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Mute, {\n          isAnimated: hasMuteAnimation,\n          className: \"mute\",\n          isMuted: videoMuted,\n          onClick: () => {\n            var _this$videoJs;\n\n            videoMuted ? this.props.unmuteVideo() : this.props.muteVideo();\n            (_this$videoJs = this.videoJs) === null || _this$videoJs === void 0 ? void 0 : _this$videoJs.muted(!videoMuted);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    videoMuted: state.videoMuted\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    muteVideo: () => dispatch(muteVideo()),\n    unmuteVideo: () => dispatch(unmuteVideo())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoModal);","map":{"version":3,"sources":["/home/slechani/react-ladompteuse-website/src/components/videomodal/VideoModal.tsx"],"names":["React","createRef","videojs","gsap","Modal","isMobile","Mute","connect","muteVideo","unmuteVideo","setAppElement","styles","content","top","left","right","bottom","inset","width","height","padding","overflow","border","zIndex","backgroundColor","overlay","options","html5","fluid","loop","controls","fill","preload","VideoModal","Component","ref","videoJs","_setupVideoJs","console","log","videoElement","current","querySelector","undefined","one","_onVideoEnd","muted","props","videoMuted","playsinline","autoplay","play","_dispose","dispose","timeline","onComplete","onVideoEnded","to","opacity","duration","_onAfterOpen","fromTo","componentDidUpdate","render","isOpen","video","videoWebm","hasMuteAnimation","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {createRef} from 'react';\nimport videojs, {VideoJsPlayer} from 'video.js';\nimport gsap from 'gsap';\nimport Modal from 'react-modal';\nimport {isMobile} from 'mobile-device-detect';\nimport Mute from '../mute/Mute';\n\nimport './VideoModal.css';\nimport {ReduxAppState} from 'src/store';\nimport {connect} from 'react-redux';\nimport {RootActionTypes} from 'src/store/root/types';\nimport {muteVideo, unmuteVideo} from 'src/store/root/actions';\nimport {Dispatch} from 'redux';\n\nModal.setAppElement('#root');\n\ntype StateProps = {\n  videoMuted: boolean;\n};\ntype DispatchProps = {\n  muteVideo: () => RootActionTypes;\n  unmuteVideo: () => RootActionTypes;\n};\n\ntype OwnProps = {\n  isOpen: boolean;\n  video: string;\n  videoWebm: string;\n  hasMuteAnimation?: boolean;\n  onVideoEnded?: () => void;\n};\n\ntype Props = OwnProps & StateProps & DispatchProps;\n\nconst styles: Modal.Styles = {\n  content: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    inset: 0,\n    width: '100vw',\n    height: '100vh',\n    padding: 0,\n    overflow: 'hidden',\n    border: 'none',\n    zIndex: 3000,\n    backgroundColor: 'black',\n  },\n  overlay: {\n    zIndex: 10,\n    backgroundColor: 'black',\n  },\n};\n\nconst options = {\n  html5: true,\n  fluid: true,\n  loop: false,\n  /*muted: true,*/\n  controls: false,\n  fill: true,\n  preload: 'auto',\n};\n\nclass VideoModal extends React.Component<Props> {\n  private ref = createRef<HTMLDivElement>();\n  private videoJs: VideoJsPlayer | null = null;\n\n  componentDidUpdate(): void {\n    if (this.videoJs === null) {\n      this._setupVideoJs();\n    }\n  }\n\n  _setupVideoJs = (): void => {\n    console.log('_setupVideoJs');\n    const videoElement = this.ref.current?.querySelector('video');\n    console.log({videoElement, ref: this.ref.current});\n    if (videoElement !== undefined && videoElement !== null) {\n      this.videoJs = videojs(videoElement, options);\n      this.videoJs.one('ended', () => this._onVideoEnd());\n      this.videoJs.muted(this.props.videoMuted);\n      this.videoJs.loop(false);\n      this.videoJs.playsinline(true);\n      this.videoJs.autoplay(true);\n      if (isMobile) {\n        this.videoJs.play();\n      }\n    }\n  };\n\n  _dispose = (): void => {\n    console.log('_dispose');\n    if (this.videoJs !== null) {\n      this.videoJs.dispose();\n      this.videoJs = null;\n    }\n  };\n\n  _onVideoEnd = (): void => {\n    console.log('_onVideoEnd');\n    gsap\n      .timeline({\n        onComplete: () => {\n          if (this.props.onVideoEnded) {\n            this.props.onVideoEnded();\n          }\n        },\n      })\n      .to(this.ref.current, {opacity: 0, duration: 3});\n  };\n\n  _onAfterOpen = (): void => {\n    console.log('_onAfterOpen');\n    this._setupVideoJs();\n    gsap.fromTo(this.ref.current, {opacity: 0}, {opacity: 1, duration: 3});\n  };\n\n  render(): JSX.Element {\n    const {isOpen, video, videoWebm, videoMuted, hasMuteAnimation} = this.props;\n    return (\n      <Modal isOpen={isOpen} style={styles} onAfterOpen={this._onAfterOpen}>\n        <div className=\"video-modal\" ref={this.ref}>\n          <video\n            className={`video-js vjs-control-bar ${isMobile ? '' : 'vjs-16-9'}`}\n            muted={videoMuted}\n            playsInline\n            webkit-playsinline=\"true\"\n            controls={false}>\n            <source src={video} type=\"video/mp4\" />\n            <source src={videoWebm} type=\"video/webm\" />\n          </video>\n          <Mute\n            isAnimated={hasMuteAnimation}\n            className=\"mute\"\n            isMuted={videoMuted}\n            onClick={() => {\n              videoMuted ? this.props.unmuteVideo() : this.props.muteVideo();\n              this.videoJs?.muted(!videoMuted);\n            }}\n          />\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state: ReduxAppState): StateProps => {\n  return {\n    videoMuted: state.videoMuted,\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    muteVideo: () => dispatch(muteVideo()),\n    unmuteVideo: () => dispatch(unmuteVideo()),\n  };\n};\n\nexport default connect<StateProps, DispatchProps, unknown, ReduxAppState>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(VideoModal);\n"]},"metadata":{},"sourceType":"module"}