{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/slechani/dompteuse-react/src/components/arrow/Arrow.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport arrowLogo from './Arrow_Back.png';\nimport arrowTopLogo from './arrow_up_default.png';\nimport arrowTopLogoHover from './arrow_up_hover.png';\nimport arrowLogoHover from './Arrow_Back_hover.png';\nimport './Arrow.css';\n\nfunction Arrow(props) {\n  _s();\n\n  var _props$className;\n\n  const {\n    direction\n  } = props;\n  const [hover, setHover] = useState(false);\n  let src;\n\n  if (hover) {\n    src = direction === 'top' ? arrowTopLogoHover : arrowLogoHover;\n  } else {\n    src = direction === 'top' ? arrowTopLogo : arrowLogo;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: `clickable arrow-back arrow-${direction} ${(_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : ''}`,\n    src: src,\n    onClick: props.onClick,\n    onMouseOver: () => setHover(true),\n    onMouseLeave: () => setHover(false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Arrow, \"bRXmKus9fOZFlca/6zXTYU+twGY=\");\n\n_c = Arrow;\nexport default Arrow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arrow\");","map":{"version":3,"sources":["/home/slechani/dompteuse-react/src/components/arrow/Arrow.tsx"],"names":["React","useState","arrowLogo","arrowTopLogo","arrowTopLogoHover","arrowLogoHover","Arrow","props","direction","hover","setHover","src","className","onClick"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAO,aAAP;;AAQA,SAASC,KAAT,CAAeC,KAAf,EAA0C;AAAA;;AAAA;;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAcD,KAApB;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAIU,GAAJ;;AACA,MAAIF,KAAJ,EAAW;AACTE,IAAAA,GAAG,GAAGH,SAAS,KAAK,KAAd,GAAsBJ,iBAAtB,GAA0CC,cAAhD;AACD,GAFD,MAEO;AACLM,IAAAA,GAAG,GAAGH,SAAS,KAAK,KAAd,GAAsBL,YAAtB,GAAqCD,SAA3C;AACD;;AACD,sBACE;AACE,IAAA,SAAS,EAAG,8BAA6BM,SAAU,IAAxC,oBAA2CD,KAAK,CAACK,SAAjD,+DAA8D,EAAG,EAD9E;AAEE,IAAA,GAAG,EAAED,GAFP;AAGE,IAAA,OAAO,EAAEJ,KAAK,CAACM,OAHjB;AAIE,IAAA,WAAW,EAAE,MAAMH,QAAQ,CAAC,IAAD,CAJ7B;AAKE,IAAA,YAAY,EAAE,MAAMA,QAAQ,CAAC,KAAD;AAL9B;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlBQJ,K;;KAAAA,K;AAoBT,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport arrowLogo from './Arrow_Back.png';\nimport arrowTopLogo from './arrow_up_default.png';\nimport arrowTopLogoHover from './arrow_up_hover.png';\nimport arrowLogoHover from './Arrow_Back_hover.png';\nimport './Arrow.css';\n\ntype Props = {\n  className?: string;\n  direction: 'left' | 'right' | 'top';\n  onClick?: () => void;\n};\n\nfunction Arrow(props: Props): JSX.Element {\n  const {direction} = props;\n  const [hover, setHover] = useState(false);\n  let src;\n  if (hover) {\n    src = direction === 'top' ? arrowTopLogoHover : arrowLogoHover;\n  } else {\n    src = direction === 'top' ? arrowTopLogo : arrowLogo;\n  }\n  return (\n    <img\n      className={`clickable arrow-back arrow-${direction} ${props.className ?? ''}`}\n      src={src}\n      onClick={props.onClick}\n      onMouseOver={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    />\n  );\n}\n\nexport default Arrow;\n"]},"metadata":{},"sourceType":"module"}