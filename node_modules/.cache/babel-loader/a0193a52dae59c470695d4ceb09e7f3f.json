{"ast":null,"code":"/*! js-yaml 4.0.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return typeof subject === 'undefined' || subject === null;\n}\n\nfunction isObject(subject) {\n  return typeof subject === 'object' && subject !== null;\n}\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;else if (isNothing(sequence)) return [];\n  return [sequence];\n}\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction repeat(string, count) {\n  var result = '',\n      cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\nfunction isNegativeZero(number) {\n  return number === 0 && Number.NEGATIVE_INFINITY === 1 / number;\n}\n\nvar isNothing_1 = isNothing;\nvar isObject_1 = isObject;\nvar toArray_1 = toArray;\nvar repeat_1 = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1 = extend;\nvar common = {\n  isNothing: isNothing_1,\n  isObject: isObject_1,\n  toArray: toArray_1,\n  repeat: repeat_1,\n  isNegativeZero: isNegativeZero_1,\n  extend: extend_1\n}; // YAML error class. http://stackoverflow.com/questions/8458984\n\nfunction formatError(exception, compact) {\n  var where = '',\n      message = exception.reason || '(unknown reason)';\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false); // Include stack trace in error object\n\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = new Error().stack || '';\n  }\n} // Inherit from Error\n\n\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\nvar exception = YAMLException; // get snippet for a single line, respecting maxLength\n\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n\n  };\n}\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n  if (!mark.buffer) return null;\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent !== 'number') options.indent = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter !== 'number') options.linesAfter = 2;\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [0];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while (match = re.exec(mark.buffer)) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n  var result = '',\n      i,\n      line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(mark.buffer, lineStarts[foundLineNo - i], lineEnds[foundLineNo - i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]), maxLineLength);\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(mark.buffer, lineStarts[foundLineNo + i], lineEnds[foundLineNo + i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]), maxLineLength);\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\nvar snippet = makeSnippet;\nvar TYPE_CONSTRUCTOR_OPTIONS = ['kind', 'multi', 'resolve', 'construct', 'instanceOf', 'predicate', 'represent', 'representName', 'defaultStyle', 'styleAliases'];\nvar YAML_NODE_KINDS = ['scalar', 'sequence', 'mapping'];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  }); // TODO: Add tag format check.\n\n  this.tag = tag;\n  this.kind = options['kind'] || null;\n\n  this.resolve = options['resolve'] || function () {\n    return true;\n  };\n\n  this.construct = options['construct'] || function (data) {\n    return data;\n  };\n\n  this.instanceOf = options['instanceOf'] || null;\n  this.predicate = options['predicate'] || null;\n  this.represent = options['represent'] || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.multi = options['multi'] || false;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type;\n/*eslint-disable max-len*/\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind && previousType.multi === currentType.multi) {\n        exclude.push(previousIndex);\n      }\n    });\n    result.push(currentType);\n  });\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\nfunction compileMap()\n/* lists... */\n{\n  var result = {\n    scalar: {},\n    sequence: {},\n    mapping: {},\n    fallback: {},\n    multi: {\n      scalar: [],\n      sequence: [],\n      mapping: [],\n      fallback: []\n    }\n  },\n      index,\n      length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n\n  return result;\n}\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' + 'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n  var result = Object.create(Schema.prototype);\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n  result.compiledImplicit = compileList(result, 'implicit', []);\n  result.compiledExplicit = compileList(result, 'explicit', []);\n  result.compiledTypeMap = compileMap(result.compiledImplicit, result.compiledExplicit);\n  return result;\n};\n\nvar schema = Schema;\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) {\n    return data !== null ? data : '';\n  }\n});\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) {\n    return data !== null ? data : [];\n  }\n});\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) {\n    return data !== null ? data : {};\n  }\n});\nvar failsafe = new schema({\n  explicit: [str, seq, map]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n  var max = data.length;\n  return max === 1 && data === '~' || max === 4 && (data === 'null' || data === 'Null' || data === 'NULL');\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () {\n      return '~';\n    },\n    lowercase: function () {\n      return 'null';\n    },\n    uppercase: function () {\n      return 'NULL';\n    },\n    camelcase: function () {\n      return 'Null';\n    },\n    empty: function () {\n      return '';\n    }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n  var max = data.length;\n  return max === 4 && (data === 'true' || data === 'True' || data === 'TRUE') || max === 5 && (data === 'false' || data === 'False' || data === 'FALSE');\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' || data === 'True' || data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) {\n      return object ? 'true' : 'false';\n    },\n    uppercase: function (object) {\n      return object ? 'TRUE' : 'FALSE';\n    },\n    camelcase: function (object) {\n      return object ? 'True' : 'False';\n    }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return 0x30\n  /* 0 */\n  <= c && c <= 0x39\n  /* 9 */\n  || 0x41\n  /* A */\n  <= c && c <= 0x46\n  /* F */\n  || 0x61\n  /* a */\n  <= c && c <= 0x66\n  /* f */\n  ;\n}\n\nfunction isOctCode(c) {\n  return 0x30\n  /* 0 */\n  <= c && c <= 0x37\n  /* 7 */\n  ;\n}\n\nfunction isDecCode(c) {\n  return 0x30\n  /* 0 */\n  <= c && c <= 0x39\n  /* 9 */\n  ;\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n  if (!max) return false;\n  ch = data[index]; // sign\n\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index]; // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n\n      return hasDigits && ch !== '_';\n    }\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n\n      return hasDigits && ch !== '_';\n    }\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n\n      return hasDigits && ch !== '_';\n    }\n  } // base 10 (except 0)\n  // value should not start with `_`;\n\n\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n\n    hasDigits = true;\n  } // Should have digits and should not end with `_`\n\n\n  if (!hasDigits || ch === '_') return false;\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data,\n      sign = 1,\n      ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return Object.prototype.toString.call(object) === '[object Number]' && object % 1 === 0 && !common.isNegativeZero(object);\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary: function (obj) {\n      return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1);\n    },\n    octal: function (obj) {\n      return obj >= 0 ? '0o' + obj.toString(8) : '-0o' + obj.toString(8).slice(1);\n    },\n    decimal: function (obj) {\n      return obj.toString(10);\n    },\n\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) {\n      return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() : '-0x' + obj.toString(16).toUpperCase().slice(1);\n    }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary: [2, 'bin'],\n    octal: [8, 'oct'],\n    decimal: [10, 'dec'],\n    hexadecimal: [16, 'hex']\n  }\n});\nvar YAML_FLOAT_PATTERN = new RegExp( // 2.5e4, 2.5 and integers\n'^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' + // .2e4, .2\n// special case, seems not from spec\n'|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' + // .inf\n'|[-+]?\\\\.(?:inf|Inf|INF)' + // .nan\n'|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) || // Quick hack to not allow integers end with `_`\n  // Probably should update regexp & check speed\n  data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n  value = data.replace(/_/g, '').toLowerCase();\n  sign = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n  } else if (value === '.nan') {\n    return NaN;\n  }\n\n  return sign * parseFloat(value, 10);\n}\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase':\n        return '.nan';\n\n      case 'uppercase':\n        return '.NAN';\n\n      case 'camelcase':\n        return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase':\n        return '.inf';\n\n      case 'uppercase':\n        return '.INF';\n\n      case 'camelcase':\n        return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase':\n        return '-.inf';\n\n      case 'uppercase':\n        return '-.INF';\n\n      case 'camelcase':\n        return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10); // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return Object.prototype.toString.call(object) === '[object Number]' && (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\nvar json = failsafe.extend({\n  implicit: [_null, bool, int, float]\n});\nvar core = json;\nvar YAML_DATE_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' + // [1] year\n'-([0-9][0-9])' + // [2] month\n'-([0-9][0-9])$'); // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' + // [1] year\n'-([0-9][0-9]?)' + // [2] month\n'-([0-9][0-9]?)' + // [3] day\n'(?:[Tt]|[ \\\\t]+)' + // ...\n'([0-9][0-9]?)' + // [4] hour\n':([0-9][0-9])' + // [5] minute\n':([0-9][0-9])' + // [6] second\n'(?:\\\\.([0-9]*))?' + // [7] fraction\n'(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n'(?::([0-9][0-9]))?))?$'); // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match,\n      year,\n      month,\n      day,\n      hour,\n      minute,\n      second,\n      fraction = 0,\n      delta = null,\n      tz_hour,\n      tz_minute,\n      date;\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n  if (match === null) throw new Error('Date resolve error'); // match: [1] year [2] month [3] day\n\n  year = +match[1];\n  month = +match[2] - 1; // JS month starts with 0\n\n  day = +match[3];\n\n  if (!match[4]) {\n    // no hour\n    return new Date(Date.UTC(year, month, day));\n  } // match: [4] hour [5] minute [6] second [7] fraction\n\n\n  hour = +match[4];\n  minute = +match[5];\n  second = +match[6];\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n\n    while (fraction.length < 3) {\n      // milli-seconds\n      fraction += '0';\n    }\n\n    fraction = +fraction;\n  } // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n\n  if (match[9]) {\n    tz_hour = +match[10];\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n  if (delta) date.setTime(date.getTime() - delta);\n  return date;\n}\n\nfunction representYamlTimestamp(object\n/*, style*/\n) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n/*eslint-disable no-bitwise*/\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\n\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n  var code,\n      idx,\n      bitlen = 0,\n      max = data.length,\n      map = BASE64_MAP; // Convert one by one.\n\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx)); // Skip CR/LF\n\n    if (code > 64) continue; // Fail on illegal characters\n\n    if (code < 0) return false;\n    bitlen += 6;\n  } // If there are any bits left, source was corrupted\n\n\n  return bitlen % 8 === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx,\n      tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''),\n      // remove CR/LF & padding to simplify scan\n  max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = []; // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if (idx % 4 === 0 && idx) {\n      result.push(bits >> 16 & 0xFF);\n      result.push(bits >> 8 & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = bits << 6 | map.indexOf(input.charAt(idx));\n  } // Dump tail\n\n\n  tailbits = max % 4 * 6;\n\n  if (tailbits === 0) {\n    result.push(bits >> 16 & 0xFF);\n    result.push(bits >> 8 & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push(bits >> 10 & 0xFF);\n    result.push(bits >> 2 & 0xFF);\n  } else if (tailbits === 12) {\n    result.push(bits >> 4 & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object\n/*, style*/\n) {\n  var result = '',\n      bits = 0,\n      idx,\n      tail,\n      max = object.length,\n      map = BASE64_MAP; // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if (idx % 3 === 0 && idx) {\n      result += map[bits >> 18 & 0x3F];\n      result += map[bits >> 12 & 0x3F];\n      result += map[bits >> 6 & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  } // Dump tail\n\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[bits >> 18 & 0x3F];\n    result += map[bits >> 12 & 0x3F];\n    result += map[bits >> 6 & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[bits >> 10 & 0x3F];\n    result += map[bits >> 4 & 0x3F];\n    result += map[bits << 2 & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[bits >> 2 & 0x3F];\n    result += map[bits << 4 & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) === '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n  var objectKeys = [],\n      index,\n      length,\n      pair,\n      pairKey,\n      pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n  var index,\n      length,\n      pair,\n      keys,\n      result,\n      object = data;\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n    keys = Object.keys(pair);\n    if (keys.length !== 1) return false;\n    result[index] = [keys[0], pair[keys[0]]];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n  var index,\n      length,\n      pair,\n      keys,\n      result,\n      object = data;\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    keys = Object.keys(pair);\n    result[index] = [keys[0], pair[keys[0]]];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n  var key,\n      object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$1.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [timestamp, merge],\n  explicit: [binary, omap, pairs, set]\n});\n/*eslint-disable max-len,no-use-before-define*/\n\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\nvar CONTEXT_FLOW_IN = 1;\nvar CONTEXT_FLOW_OUT = 2;\nvar CONTEXT_BLOCK_IN = 3;\nvar CONTEXT_BLOCK_OUT = 4;\nvar CHOMPING_CLIP = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP = 3;\nvar PATTERN_NON_PRINTABLE = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction is_EOL(c) {\n  return c === 0x0A\n  /* LF */\n  || c === 0x0D\n  /* CR */\n  ;\n}\n\nfunction is_WHITE_SPACE(c) {\n  return c === 0x09\n  /* Tab */\n  || c === 0x20\n  /* Space */\n  ;\n}\n\nfunction is_WS_OR_EOL(c) {\n  return c === 0x09\n  /* Tab */\n  || c === 0x20\n  /* Space */\n  || c === 0x0A\n  /* LF */\n  || c === 0x0D\n  /* CR */\n  ;\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C\n  /* , */\n  || c === 0x5B\n  /* [ */\n  || c === 0x5D\n  /* ] */\n  || c === 0x7B\n  /* { */\n  || c === 0x7D\n  /* } */\n  ;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if (0x30\n  /* 0 */\n  <= c && c <= 0x39\n  /* 9 */\n  ) {\n    return c - 0x30;\n  }\n  /*eslint-disable no-bitwise*/\n\n\n  lc = c | 0x20;\n\n  if (0x61\n  /* a */\n  <= lc && lc <= 0x66\n  /* f */\n  ) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78\n  /* x */\n  ) {\n      return 2;\n    }\n\n  if (c === 0x75\n  /* u */\n  ) {\n      return 4;\n    }\n\n  if (c === 0x55\n  /* U */\n  ) {\n      return 8;\n    }\n\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if (0x30\n  /* 0 */\n  <= c && c <= 0x39\n  /* 9 */\n  ) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return c === 0x30\n  /* 0 */\n  ? '\\x00' : c === 0x61\n  /* a */\n  ? '\\x07' : c === 0x62\n  /* b */\n  ? '\\x08' : c === 0x74\n  /* t */\n  ? '\\x09' : c === 0x09\n  /* Tab */\n  ? '\\x09' : c === 0x6E\n  /* n */\n  ? '\\x0A' : c === 0x76\n  /* v */\n  ? '\\x0B' : c === 0x66\n  /* f */\n  ? '\\x0C' : c === 0x72\n  /* r */\n  ? '\\x0D' : c === 0x65\n  /* e */\n  ? '\\x1B' : c === 0x20\n  /* Space */\n  ? ' ' : c === 0x22\n  /* \" */\n  ? '\\x22' : c === 0x2F\n  /* / */\n  ? '/' : c === 0x5C\n  /* \\ */\n  ? '\\x5C' : c === 0x4E\n  /* N */\n  ? '\\x85' : c === 0x5F\n  /* _ */\n  ? '\\xA0' : c === 0x4C\n  /* L */\n  ? '\\u2028' : c === 0x50\n  /* P */\n  ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  } // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n\n\n  return String.fromCharCode((c - 0x010000 >> 10) + 0xD800, (c - 0x010000 & 0x03FF) + 0xDC00);\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\n\nvar simpleEscapeMap = new Array(256);\n\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\nfunction State(input, options) {\n  this.input = input;\n  this.filename = options['filename'] || null;\n  this.schema = options['schema'] || _default;\n  this.onWarning = options['onWarning'] || null; // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n\n  this.legacy = options['legacy'] || false;\n  this.json = options['json'] || false;\n  this.listener = options['listener'] || null;\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap = this.schema.compiledTypeMap;\n  this.length = input.length;\n  this.position = 0;\n  this.line = 0;\n  this.lineStart = 0;\n  this.lineIndent = 0; // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n\n  this.firstTabInLine = -1;\n  this.documents = [];\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n}\n\nfunction generateError(state, message) {\n  var mark = {\n    name: state.filename,\n    buffer: state.input.slice(0, -1),\n    // omit trailing \\0\n    position: state.position,\n    line: state.line,\n    column: state.position - state.lineStart\n  };\n  mark.snippet = snippet(mark);\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\nvar directiveHandlers = {\n  YAML: function handleYamlDirective(state, name, args) {\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = minor < 2;\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n  TAG: function handleTagDirective(state, name, args) {\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$2.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n\n        if (!(_character === 0x09 || 0x20 <= _character && _character <= 0x10FFFF)) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$2.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startLineStart, startPos) {\n  var index, quantity; // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  } // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n\n\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json && !_hasOwnProperty$2.call(overridableKeys, keyNode) && _hasOwnProperty$2.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    } // used for this specific key only because Object.defineProperty is slow\n\n\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A\n  /* LF */\n  ) {\n      state.position++;\n    } else if (ch === 0x0D\n  /* CR */\n  ) {\n      state.position++;\n\n      if (state.input.charCodeAt(state.position) === 0x0A\n      /* LF */\n      ) {\n          state.position++;\n        }\n    } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09\n      /* Tab */\n      && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23\n    /* # */\n    ) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (ch !== 0x0A\n        /* LF */\n        && ch !== 0x0D\n        /* CR */\n        && ch !== 0);\n      }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20\n      /* Space */\n      ) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n  ch = state.input.charCodeAt(_position); // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n\n  if ((ch === 0x2D\n  /* - */\n  || ch === 0x2E\n  /* . */\n  ) && ch === state.input.charCodeAt(_position + 1) && ch === state.input.charCodeAt(_position + 2)) {\n    _position += 3;\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch) || is_FLOW_INDICATOR(ch) || ch === 0x23\n  /* # */\n  || ch === 0x26\n  /* & */\n  || ch === 0x2A\n  /* * */\n  || ch === 0x21\n  /* ! */\n  || ch === 0x7C\n  /* | */\n  || ch === 0x3E\n  /* > */\n  || ch === 0x27\n  /* ' */\n  || ch === 0x22\n  /* \" */\n  || ch === 0x25\n  /* % */\n  || ch === 0x40\n  /* @ */\n  || ch === 0x60\n  /* ` */\n  ) {\n      return false;\n    }\n\n  if (ch === 0x3F\n  /* ? */\n  || ch === 0x2D\n  /* - */\n  ) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        return false;\n      }\n    }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A\n    /* : */\n    ) {\n        following = state.input.charCodeAt(state.position + 1);\n\n        if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n          break;\n        }\n      } else if (ch === 0x23\n    /* # */\n    ) {\n        preceding = state.input.charCodeAt(state.position - 1);\n\n        if (is_WS_OR_EOL(preceding)) {\n          break;\n        }\n      } else if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch, captureStart, captureEnd;\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27\n  /* ' */\n  ) {\n      return false;\n    }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27\n    /* ' */\n    ) {\n        captureSegment(state, captureStart, state.position, true);\n        ch = state.input.charCodeAt(++state.position);\n\n        if (ch === 0x27\n        /* ' */\n        ) {\n            captureStart = state.position;\n            state.position++;\n            captureEnd = state.position;\n          } else {\n          return true;\n        }\n      } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart, captureEnd, hexLength, hexResult, tmp, ch;\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22\n  /* \" */\n  ) {\n      return false;\n    }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22\n    /* \" */\n    ) {\n        captureSegment(state, captureStart, state.position, true);\n        state.position++;\n        return true;\n      } else if (ch === 0x5C\n    /* \\ */\n    ) {\n        captureSegment(state, captureStart, state.position, true);\n        ch = state.input.charCodeAt(++state.position);\n\n        if (is_EOL(ch)) {\n          skipSeparationSpace(state, false, nodeIndent); // TODO: rework to inline fn with no type cast?\n        } else if (ch < 256 && simpleEscapeCheck[ch]) {\n          state.result += simpleEscapeMap[ch];\n          state.position++;\n        } else if ((tmp = escapedHexLen(ch)) > 0) {\n          hexLength = tmp;\n          hexResult = 0;\n\n          for (; hexLength > 0; hexLength--) {\n            ch = state.input.charCodeAt(++state.position);\n\n            if ((tmp = fromHexCode(ch)) >= 0) {\n              hexResult = (hexResult << 4) + tmp;\n            } else {\n              throwError(state, 'expected hexadecimal character');\n            }\n          }\n\n          state.result += charFromCodepoint(hexResult);\n          state.position++;\n        } else {\n          throwError(state, 'unknown escape sequence');\n        }\n\n        captureStart = captureEnd = state.position;\n      } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag = state.tag,\n      _result,\n      _anchor = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B\n  /* [ */\n  ) {\n      terminator = 0x5D;\n      /* ] */\n\n      isMapping = false;\n      _result = [];\n    } else if (ch === 0x7B\n  /* { */\n  ) {\n      terminator = 0x7D;\n      /* } */\n\n      isMapping = true;\n      _result = {};\n    } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C\n    /* , */\n    ) {\n        // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n        throwError(state, \"expected the node content, but found ','\");\n      }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F\n    /* ? */\n    ) {\n        following = state.input.charCodeAt(state.position + 1);\n\n        if (is_WS_OR_EOL(following)) {\n          isPair = isExplicitPair = true;\n          state.position++;\n          skipSeparationSpace(state, true, nodeIndent);\n        }\n      }\n\n    _line = state.line; // Save the current line.\n\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A\n    /* : */\n    ) {\n        isPair = true;\n        ch = state.input.charCodeAt(++state.position);\n        skipSeparationSpace(state, true, nodeIndent);\n        composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n        valueNode = state.result;\n      }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C\n    /* , */\n    ) {\n        readNext = true;\n        ch = state.input.charCodeAt(++state.position);\n      } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent = nodeIndent,\n      emptyLines = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C\n  /* | */\n  ) {\n      folding = false;\n    } else if (ch === 0x3E\n  /* > */\n  ) {\n      folding = true;\n    } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B\n    /* + */\n    || ch === 0x2D\n    /* - */\n    ) {\n        if (CHOMPING_CLIP === chomping) {\n          chomping = ch === 0x2B\n          /* + */\n          ? CHOMPING_KEEP : CHOMPING_STRIP;\n        } else {\n          throwError(state, 'repeat of a chomping mode identifier');\n        }\n      } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23\n    /* # */\n    ) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (!is_EOL(ch) && ch !== 0);\n      }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) && ch === 0x20\n    /* Space */\n    ) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    } // End of the scalar.\n\n\n    if (state.lineIndent < textIndent) {\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) {\n          // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      } // Break this `while` cycle and go to the funciton's epilogue.\n\n\n      break;\n    } // Folded style: use fancy rules to handle line breaks.\n\n\n    if (folding) {\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true; // except for the first content line (cf. Example 8.1)\n\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines); // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1); // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) {\n          // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        } // Several line breaks - perceive as different lines.\n\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      } // Literal style: just add exact number of line breaks between content lines.\n\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && ch !== 0) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag = state.tag,\n      _anchor = state.anchor,\n      _result = [],\n      following,\n      detected = false,\n      ch; // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n\n\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D\n    /* - */\n    ) {\n        break;\n      }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n\n    _result.push(state.result);\n\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag = state.tag,\n      _anchor = state.anchor,\n      _result = {},\n      overridableKeys = Object.create(null),\n      keyTag = null,\n      keyNode = null,\n      valueNode = null,\n      atExplicitKey = false,\n      detected = false,\n      ch; // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n\n\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n\n    if ((ch === 0x3F\n    /* ? */\n    || ch === 0x3A\n    /* : */\n    ) && is_WS_OR_EOL(following)) {\n      if (ch === 0x3F\n      /* ? */\n      ) {\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = true;\n          allowCompact = true;\n        } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following; //\n      // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n      //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A\n        /* : */\n        ) {\n            ch = state.input.charCodeAt(++state.position);\n\n            if (!is_WS_OR_EOL(ch)) {\n              throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n            }\n\n            if (atExplicitKey) {\n              storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n              keyTag = keyNode = valueNode = null;\n            }\n\n            detected = true;\n            atExplicitKey = false;\n            allowCompact = false;\n            keyTag = state.tag;\n            keyNode = state.result;\n          } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    } //\n    // Common reading code for both explicit and implicit notations.\n    //\n\n\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  } //\n  // Epilogue.\n  //\n  // Special case: last mapping's node contains only the key in explicit notation.\n\n\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  } // Expose the resulting mapping.\n\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x21\n  /* ! */\n  ) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C\n  /* < */\n  ) {\n      isVerbatim = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else if (ch === 0x21\n  /* ! */\n  ) {\n      isNamed = true;\n      tagHandle = '!!';\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do {\n      ch = state.input.charCodeAt(++state.position);\n    } while (ch !== 0 && ch !== 0x3E\n    /* > */\n    );\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      if (ch === 0x21\n      /* ! */\n      ) {\n          if (!isNamed) {\n            tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n            if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n              throwError(state, 'named tag handle cannot contain such characters');\n            }\n\n            isNamed = true;\n            _position = state.position + 1;\n          } else {\n            throwError(state, 'tag suffix cannot contain exclamation marks');\n          }\n        }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n  } else if (_hasOwnProperty$2.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position, ch;\n\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x26\n  /* & */\n  ) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias, ch;\n\n  ch = state.input.charCodeAt(state.position);\n  if (ch !== 0x2A\n  /* * */\n  ) return false;\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$2.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1,\n      // 1: this>parent, 0: this=parent, -1: this<parent\n  atNewLine = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag = null;\n  state.anchor = null;\n  state.kind = null;\n  state.result = null;\n  allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) {\n        // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$2.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) {\n      // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n\n  return state.tag !== null || state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25\n    /* % */\n    ) {\n        break;\n      }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23\n      /* # */\n      ) {\n          do {\n            ch = state.input.charCodeAt(++state.position);\n          } while (ch !== 0 && !is_EOL(ch));\n\n          break;\n        }\n\n      if (is_EOL(ch)) break;\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$2.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 && state.input.charCodeAt(state.position) === 0x2D\n  /* - */\n  && state.input.charCodeAt(state.position + 1) === 0x2D\n  /* - */\n  && state.input.charCodeAt(state.position + 2) === 0x2D\n  /* - */\n  ) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n    if (state.input.charCodeAt(state.position) === 0x2E\n    /* . */\n    ) {\n        state.position += 3;\n        skipSeparationSpace(state, true, -1);\n      }\n\n    return;\n  }\n\n  if (state.position < state.length - 1) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A\n    /* LF */\n    && input.charCodeAt(input.length - 1) !== 0x0D\n    /* CR */\n    ) {\n        input += '\\n';\n      } // Strip BOM\n\n\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  } // Use 0 as string terminator. That significantly simplifies bounds check.\n\n\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20\n  /* Space */\n  ) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < state.length - 1) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n\n  throw new exception('expected a single document in the stream, but found more');\n}\n\nvar loadAll_1 = loadAll;\nvar load_1 = load;\nvar loader = {\n  loadAll: loadAll_1,\n  load: load_1\n};\n/*eslint-disable no-use-before-define*/\n\nvar _toString$2 = Object.prototype.toString;\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar CHAR_BOM = 0xFEFF;\nvar CHAR_TAB = 0x09;\n/* Tab */\n\nvar CHAR_LINE_FEED = 0x0A;\n/* LF */\n\nvar CHAR_CARRIAGE_RETURN = 0x0D;\n/* CR */\n\nvar CHAR_SPACE = 0x20;\n/* Space */\n\nvar CHAR_EXCLAMATION = 0x21;\n/* ! */\n\nvar CHAR_DOUBLE_QUOTE = 0x22;\n/* \" */\n\nvar CHAR_SHARP = 0x23;\n/* # */\n\nvar CHAR_PERCENT = 0x25;\n/* % */\n\nvar CHAR_AMPERSAND = 0x26;\n/* & */\n\nvar CHAR_SINGLE_QUOTE = 0x27;\n/* ' */\n\nvar CHAR_ASTERISK = 0x2A;\n/* * */\n\nvar CHAR_COMMA = 0x2C;\n/* , */\n\nvar CHAR_MINUS = 0x2D;\n/* - */\n\nvar CHAR_COLON = 0x3A;\n/* : */\n\nvar CHAR_EQUALS = 0x3D;\n/* = */\n\nvar CHAR_GREATER_THAN = 0x3E;\n/* > */\n\nvar CHAR_QUESTION = 0x3F;\n/* ? */\n\nvar CHAR_COMMERCIAL_AT = 0x40;\n/* @ */\n\nvar CHAR_LEFT_SQUARE_BRACKET = 0x5B;\n/* [ */\n\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D;\n/* ] */\n\nvar CHAR_GRAVE_ACCENT = 0x60;\n/* ` */\n\nvar CHAR_LEFT_CURLY_BRACKET = 0x7B;\n/* { */\n\nvar CHAR_VERTICAL_LINE = 0x7C;\n/* | */\n\nvar CHAR_RIGHT_CURLY_BRACKET = 0x7D;\n/* } */\n\nvar ESCAPE_SEQUENCES = {};\nESCAPE_SEQUENCES[0x00] = '\\\\0';\nESCAPE_SEQUENCES[0x07] = '\\\\a';\nESCAPE_SEQUENCES[0x08] = '\\\\b';\nESCAPE_SEQUENCES[0x09] = '\\\\t';\nESCAPE_SEQUENCES[0x0A] = '\\\\n';\nESCAPE_SEQUENCES[0x0B] = '\\\\v';\nESCAPE_SEQUENCES[0x0C] = '\\\\f';\nESCAPE_SEQUENCES[0x0D] = '\\\\r';\nESCAPE_SEQUENCES[0x1B] = '\\\\e';\nESCAPE_SEQUENCES[0x22] = '\\\\\"';\nESCAPE_SEQUENCES[0x5C] = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85] = '\\\\N';\nESCAPE_SEQUENCES[0xA0] = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\nvar DEPRECATED_BOOLEANS_SYNTAX = ['y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON', 'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'];\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n  if (map === null) return {};\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty$3.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State$1(options) {\n  this.schema = options['schema'] || _default;\n  this.indent = Math.max(1, options['indent'] || 2);\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid = options['skipInvalid'] || false;\n  this.flowLevel = common.isNothing(options['flowLevel']) ? -1 : options['flowLevel'];\n  this.styleMap = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys = options['sortKeys'] || false;\n  this.lineWidth = options['lineWidth'] || 80;\n  this.noRefs = options['noRefs'] || false;\n  this.noCompatMode = options['noCompatMode'] || false;\n  this.condenseFlow = options['condenseFlow'] || false;\n  this.quotingType = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes = options['forceQuotes'] || false;\n  this.replacer = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n  this.tag = null;\n  this.result = '';\n  this.duplicates = [];\n  this.usedDuplicates = null;\n} // Indents every line in a string. Empty lines (\\n only) are not indented.\n\n\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n} // [33] s-white ::= s-space | s-tab\n\n\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n} // Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\n\n\nfunction isPrintable(c) {\n  return 0x00020 <= c && c <= 0x00007E || 0x000A1 <= c && c <= 0x00D7FF && c !== 0x2028 && c !== 0x2029 || 0x0E000 <= c && c <= 0x00FFFD && c !== CHAR_BOM || 0x10000 <= c && c <= 0x10FFFF;\n} // [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\n\n\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c) && c !== CHAR_BOM // - b-char\n  && c !== CHAR_CARRIAGE_RETURN && c !== CHAR_LINE_FEED;\n} // [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\n\n\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return ( // ns-plain-safe\n  inblock ? // c = flow-in\n  cIsNsCharOrWhitespace : cIsNsCharOrWhitespace // - c-flow-indicator\n  && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET) && // ns-plain-char\n  c !== CHAR_SHARP // false on '#'\n  && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n  || isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP // change to true on '[^ ]#'\n  || prev === CHAR_COLON && cIsNsChar; // change to true on ':[^ ]'\n} // Simplified test for values allowed as the first character in plain style.\n\n\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM && !isWhitespace(c) // - s-white\n  // - (c-indicator ::=\n  // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n  && c !== CHAR_MINUS && c !== CHAR_QUESTION && c !== CHAR_COLON && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n  && c !== CHAR_SHARP && c !== CHAR_AMPERSAND && c !== CHAR_ASTERISK && c !== CHAR_EXCLAMATION && c !== CHAR_VERTICAL_LINE && c !== CHAR_EQUALS && c !== CHAR_GREATER_THAN && c !== CHAR_SINGLE_QUOTE && c !== CHAR_DOUBLE_QUOTE // | “%” | “@” | “`”)\n  && c !== CHAR_PERCENT && c !== CHAR_COMMERCIAL_AT && c !== CHAR_GRAVE_ACCENT;\n} // Simplified test for values allowed as the last character in plain style.\n\n\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n} // Same as 'string'.codePointAt(pos), but works in older browsers.\n\n\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos),\n      second;\n\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n\n  return first;\n} // Determines whether block indentation indicator is required.\n\n\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN = 1,\n    STYLE_SINGLE = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED = 4,\n    STYLE_DOUBLE = 5; // Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\n\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType, quotingType, forceQuotes, inblock) {\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n\n  var plain = isPlainSafeFirst(codePointAt(string, 0)) && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true; // Check if any line can be folded.\n\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine || // Foldable line = too long, and not more-indented.\n          i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    } // in case the end is missing a \\n\n\n\n    hasFoldableLine = hasFoldableLine || shouldTrackWidth && i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n  } // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n\n\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  } // Edge case: block indentation indicator can only have one digit.\n\n\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  } // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n\n\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n} // Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\n\n\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"' + string + '\"' : \"'\" + string + \"'\";\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n\n    var lineWidth = state.lineWidth === -1 ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent); // Without knowing if keys are implicit/explicit, assume implicit for safety.\n\n    var singleLineOnly = iskey // No block styles in flow mode.\n    || state.flowLevel > -1 && level >= state.flowLevel;\n\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n      case STYLE_PLAIN:\n        return string;\n\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent) + dropEndingNewline(indentString(string, indent));\n\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent) + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }();\n} // Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\n\n\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : ''; // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n\n  var clip = string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : clip ? '' : '-';\n  return indentIndicator + chomp + '\\n';\n} // (See the note for writeScalar.)\n\n\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n} // Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\n\n\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g; // first line (possibly an empty line)\n\n  var result = function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }(); // If we haven't reached the first content line yet, don't add an extra \\n.\n\n\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented; // rest of the lines\n\n  var match;\n\n  while (match = lineRe.exec(string)) {\n    var prefix = match[1],\n        line = match[2];\n    moreIndented = line[0] === ' ';\n    result += prefix + (!prevMoreIndented && !moreIndented && line !== '' ? '\\n' : '') + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n} // Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\n\n\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line; // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n\n  var match; // start is an inclusive index. end, curr, and next are exclusive.\n\n  var start = 0,\n      end,\n      curr = 0,\n      next = 0;\n  var result = ''; // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n\n  while (match = breakRe.exec(line)) {\n    next = match.index; // maintain invariant: curr - start <= width\n\n    if (next - start > width) {\n      end = curr > start ? curr : next; // derive end <= length-2\n\n      result += '\\n' + line.slice(start, end); // skip the space that was output as \\n\n\n      start = end + 1; // derive start <= length-1\n    }\n\n    curr = next;\n  } // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n\n\n  result += '\\n'; // Insert a break if the remainder is too long and there is a break available.\n\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n} // Escapes a double-quoted string.\n\n\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    } // Write only valid elements, put null instead of invalid elements.\n\n\n    if (writeNode(state, level, value, false, false) || typeof value === 'undefined' && writeNode(state, level, null, false, false)) {\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    } // Write only valid elements, put null instead of invalid elements.\n\n\n    if (writeNode(state, level + 1, value, true, true, false, true) || typeof value === 'undefined' && writeNode(state, level + 1, null, true, true, false, true)) {\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result = '',\n      _tag = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n    if (state.condenseFlow) pairBuffer += '\"';\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump; // Both key and value are valid.\n\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result = '',\n      _tag = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer; // Allow sorting keys so that the output file is deterministic\n\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = state.tag !== null && state.tag !== '?' || state.dump && state.dump.length > 1024;\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump; // Both key and value are valid.\n\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf || type.predicate) && (!type.instanceOf || typeof object === 'object' && object instanceof type.instanceOf) && (!type.predicate || type.predicate(object))) {\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString$2.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty$3.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n} // Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\n\n\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString$2.call(state.dump);\n\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = state.flowLevel < 0 || state.flowLevel > level;\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if (state.tag !== null && state.tag !== '?' || duplicate || state.indent !== 2 && level > 0) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n\n    if (type === '[object Object]') {\n      if (block && Object.keys(state.dump).length !== 0) {\n        writeBlockMapping(state, level, state.dump, compact);\n\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && state.dump.length !== 0) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(state.tag[0] === '!' ? state.tag.slice(1) : state.tag).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList, index, length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n  var state = new State$1(options);\n  if (!state.noRefs) getDuplicateReferences(input, state);\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({\n      '': value\n    }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n  return '';\n}\n\nvar dump_1 = dump;\nvar dumper = {\n  dump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' + 'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\nvar Type$1 = type;\nvar Schema$1 = schema;\nvar FAILSAFE_SCHEMA = failsafe;\nvar JSON_SCHEMA = json;\nvar CORE_SCHEMA = core;\nvar DEFAULT_SCHEMA = _default;\nvar load$1 = loader.load;\nvar loadAll$1 = loader.loadAll;\nvar dump$1 = dumper.dump;\nvar YAMLException$1 = exception; // Removed functions from JS-YAML 3.0.x\n\nvar safeLoad = renamed('safeLoad', 'load');\nvar safeLoadAll = renamed('safeLoadAll', 'loadAll');\nvar safeDump = renamed('safeDump', 'dump');\nvar jsYaml = {\n  Type: Type$1,\n  Schema: Schema$1,\n  FAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n  JSON_SCHEMA: JSON_SCHEMA,\n  CORE_SCHEMA: CORE_SCHEMA,\n  DEFAULT_SCHEMA: DEFAULT_SCHEMA,\n  load: load$1,\n  loadAll: loadAll$1,\n  dump: dump$1,\n  YAMLException: YAMLException$1,\n  safeLoad: safeLoad,\n  safeLoadAll: safeLoadAll,\n  safeDump: safeDump\n};\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema$1 as Schema, Type$1 as Type, YAMLException$1 as YAMLException, dump$1 as dump, load$1 as load, loadAll$1 as loadAll, safeDump, safeLoad, safeLoadAll };","map":{"version":3,"sources":["/home/slechani/react-ladompteuse-website/node_modules/js-yaml/dist/js-yaml.mjs"],"names":["isNothing","subject","isObject","toArray","sequence","Array","isArray","extend","target","source","index","length","key","sourceKeys","Object","keys","repeat","string","count","result","cycle","isNegativeZero","number","Number","NEGATIVE_INFINITY","isNothing_1","isObject_1","toArray_1","repeat_1","isNegativeZero_1","extend_1","common","formatError","exception","compact","where","message","reason","mark","name","line","column","snippet","YAMLException","Error","call","captureStackTrace","constructor","stack","prototype","create","toString","getLine","buffer","lineStart","lineEnd","position","maxLineLength","head","tail","maxHalfLength","Math","floor","str","slice","replace","pos","padStart","max","makeSnippet","options","maxLength","indent","linesBefore","linesAfter","re","lineStarts","lineEnds","match","foundLineNo","exec","push","i","lineNoLength","min","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","compileStyleAliases","map","forEach","style","alias","String","Type","tag","indexOf","kind","resolve","construct","data","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","type","compileList","schema","exclude","currentType","previousType","previousIndex","filter","compileMap","scalar","mapping","fallback","collectType","arguments","Schema","definition","implicit","explicit","concat","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","seq","failsafe","resolveYamlNull","constructYamlNull","isNull","object","_null","canonical","lowercase","uppercase","camelcase","empty","resolveYamlBoolean","constructYamlBoolean","isBoolean","bool","isHexCode","c","isOctCode","isDecCode","resolveYamlInteger","hasDigits","ch","charCodeAt","constructYamlInteger","value","sign","parseInt","isInteger","int","binary","obj","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","RegExp","resolveYamlFloat","test","constructYamlFloat","toLowerCase","POSITIVE_INFINITY","NaN","parseFloat","SCIENTIFIC_WITHOUT_DOT","representYamlFloat","res","isNaN","isFloat","float","json","core","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","resolveYamlTimestamp","constructYamlTimestamp","year","month","day","hour","minute","second","fraction","delta","tz_hour","tz_minute","date","Date","UTC","setTime","getTime","representYamlTimestamp","toISOString","timestamp","resolveYamlMerge","merge","BASE64_MAP","resolveYamlBinary","code","idx","bitlen","charAt","constructYamlBinary","tailbits","input","bits","Uint8Array","representYamlBinary","isBinary","_hasOwnProperty","hasOwnProperty","_toString","resolveYamlOmap","objectKeys","pair","pairKey","pairHasKey","constructYamlOmap","omap","_toString$1","resolveYamlPairs","constructYamlPairs","pairs","_hasOwnProperty$1","resolveYamlSet","constructYamlSet","set","_default","_hasOwnProperty$2","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","escapedHexLen","fromDecimalCode","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","State","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","state","throwError","throwWarning","directiveHandlers","YAML","handleYamlDirective","args","major","minor","version","checkLineBreaks","TAG","handleTagDirective","handle","prefix","tagMap","decodeURIComponent","err","captureSegment","start","end","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","defineProperty","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readPlainScalar","nodeIndent","withinFlowCollection","preceding","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","readSingleQuotedScalar","readDoubleQuotedScalar","hexLength","hexResult","tmp","readFlowCollection","readNext","_pos","_tag","_anchor","anchor","terminator","isPair","isExplicitPair","isMapping","anchorMap","composeNode","readBlockScalar","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockSequence","detected","readBlockMapping","flowIndent","allowCompact","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readTagProperty","isVerbatim","isNamed","tagHandle","tagName","readAnchorProperty","readAlias","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","indentStatus","atNewLine","hasContent","typeIndex","typeQuantity","typeList","blockIndent","readDocument","documentStart","directiveName","directiveArgs","hasDirectives","loadDocuments","nullpos","loadAll","iterator","load","undefined","loadAll_1","load_1","loader","_toString$2","_hasOwnProperty$3","CHAR_BOM","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","compileStyleMap","encodeHex","character","QUOTING_TYPE_SINGLE","QUOTING_TYPE_DOUBLE","State$1","noArrayIndent","skipInvalid","flowLevel","styleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","level","testImplicitResolving","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","isPlainSafeFirst","isPlainSafeLast","codePointAt","first","needIndentIndicator","leadingSpaceRe","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","dump","testAmbiguity","blockHeader","dropEndingNewline","foldString","escapeString","indentIndicator","clip","keep","chomp","width","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","moreIndented","breakRe","curr","escapeSeq","writeFlowSequence","writeNode","writeBlockSequence","writeFlowMapping","objectKeyList","objectKey","objectValue","pairBuffer","writeBlockMapping","explicitPair","sort","detectType","block","isblockseq","tagStr","objectOrArray","duplicateIndex","duplicate","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","dump_1","dumper","renamed","from","to","Type$1","Schema$1","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","load$1","loadAll$1","dump$1","YAMLException$1","safeLoad","safeLoadAll","safeDump","jsYaml"],"mappings":"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","sourcesContent":["\n/*! js-yaml 4.0.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit', []);\n  result.compiledExplicit = compileList(result, 'explicit', []);\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$1.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$2.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$2.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$2.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$2.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$2.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$2.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$2.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$2.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll;\nvar load_1    = load;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString$2       = Object.prototype.toString;\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty$3.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State$1(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString$2.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty$3.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString$2.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State$1(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type$1                = type;\nvar Schema$1              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load$1                = loader.load;\nvar loadAll$1             = loader.loadAll;\nvar dump$1                = dumper.dump;\nvar YAMLException$1       = exception;\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type$1,\n\tSchema: Schema$1,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load$1,\n\tloadAll: loadAll$1,\n\tdump: dump$1,\n\tYAMLException: YAMLException$1,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema$1 as Schema, Type$1 as Type, YAMLException$1 as YAMLException, dump$1 as dump, load$1 as load, loadAll$1 as loadAll, safeDump, safeLoad, safeLoadAll };\n"]},"metadata":{},"sourceType":"module"}